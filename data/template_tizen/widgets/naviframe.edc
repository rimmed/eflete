/*
 * efl-theme-tizen
 * Copyright (c) 2012-2013 Samsung Electronics Co., Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



#define NAVIFRAME_VIEW_TRANS_TIME 0.3
#define NAVIFRAME_TITLE_SLIDE_TEXT_GAP 60
#define NAVIFRAME_SUBTITLE_SLIDE_TEXT_GAP 40
#define NAVIFRAME_TITLE_SLIDE_MAX_COUNT 3
#define NAVIFRAME_TITLE_SLIDE_SPEED_WEIGHT 0.01

   group { name: "elm/naviframe/item/basic/default";
      images {
         image: "00_title_bg.png" COMP;
         image: "00_badge_bg.png" COMP;
         image: "00_effect_title_text_dim_left.png" COMP;
         image: "00_effect_title_text_dim_right.png" COMP;
      }
      script {
         public tbar_bg = 0;     //Toolbar BG Show call count
         public tbar_close = 0; //Toolbar lastest Open/Close status
         public title_badge_visible = 0; //Title badge visible/hidden status
         public landscape = 0; //Landscape mode status
         public subtitle = 0; //Subtitle on/off status

         public title_duration = 0;
         public subtitle_duration = 0;
         public title_slide_stop;
         public subtitle_slide_stop;
         public title_slide_anim_id;
         public subtitle_slide_anim_id;
         public title_text_w;
         public subtitle_text_w;
         public org_title_text_w;
         public org_subtitle_text_w;
         public title_slide_count = 0;
         public subtitle_slide_count = 0;

         public get_width(val) {
            new x, y, w, h;
            new buf[128];
            new st[31];
            new Float:vl;

            // Title Text
            if (val == 0) {
               get_geometry(PART:"elm.text.title", x, y, w, h);
               set_int(org_title_text_w, w);

               get_text(PART:"elm.text.title", buf, 127);
               set_text(PART:"elm.text.full_title", buf);
               get_state(PART:"elm.text.title", st, 30, vl);
               set_state(PART:"elm.text.full_title", st, 0.0);
               get_geometry(PART:"elm.text.full_title", x, y, w, h);
               set_int(title_text_w, w);
            }
            // Subtitle Text
            else {
               get_geometry(PART:"elm.text.subtitle", x, y, w, h);
               set_int(org_subtitle_text_w, w);

               get_text(PART:"elm.text.subtitle", buf, 127);
               set_text(PART:"elm.text.full_subtitle", buf);
               get_state(PART:"elm.text.subtitle", st, 30, vl);
               set_state(PART:"elm.text.full_subtitle", st, 0.0);
               get_geometry(PART:"elm.text.full_subtitle", x, y, w, h);
               set_int(subtitle_text_w, w);
            }
         }

         public slide_end_pending(val, Float:pos) {
            if (pos >= 1.0) {
               // Title Text
               if (val == 0) {
                  if (get_int(title_slide_count) < NAVIFRAME_TITLE_SLIDE_MAX_COUNT)
                    start_slide(0);
                  else
                    stop_slide(0);
               }
               // Subtitle Text
               else{
                  if (get_int(subtitle_slide_count) < NAVIFRAME_TITLE_SLIDE_MAX_COUNT)
                    start_slide(1);
                  else
                    stop_slide(1);
               }
            }
         }

         public slide_to_end_anim(val, Float:pos) {
            // Title Text
            if (val == 0) {
               if (get_int(title_slide_stop)) return;

               if (!get_int(subtitle)) {
                  set_tween_state(PART:"elm.text.slide_begin_title", pos, "title_slide_begin", 0.0, "title_slide_end", 0.0);
                  set_tween_state(PART:"elm.text.slide_end_title", pos, "title_slide_begin", 0.0, "title_slide_end", 0.0);
               }
               else {
                  if (!get_int(landscape)) {
                     set_tween_state(PART:"elm.text.slide_begin_title", pos, "maintitle_slide_begin", 0.0, "maintitle_slide_end", 0.0);
                     set_tween_state(PART:"elm.text.slide_end_title", pos, "maintitle_slide_begin", 0.0, "maintitle_slide_end", 0.0);
                  }
                  else {
                     set_tween_state(PART:"elm.text.slide_begin_title", pos, "maintitle_slide_begin_landscape", 0.0, "maintitle_slide_end_landscape", 0.0);
                     set_tween_state(PART:"elm.text.slide_end_title", pos, "maintitle_slide_begin_landscape", 0.0, "maintitle_slide_end_landscape", 0.0);
                  }
               }

               if (pos >= 1.0)
                 anim(1, "slide_end_pending", 0);
            }
            // Subtitle Text
            else {
               if (get_int(subtitle_slide_stop)) return;

               if (!get_int(landscape)) {
                  set_tween_state(PART:"elm.text.slide_begin_subtitle", pos, "slide_begin", 0.0, "slide_end", 0.0);
                  set_tween_state(PART:"elm.text.slide_end_subtitle", pos, "slide_begin", 0.0, "slide_end", 0.0);
               }
               else {
                  set_tween_state(PART:"elm.text.slide_begin_subtitle", pos, "slide_begin_landscape", 0.0, "slide_end_landscape", 0.0);
                  set_tween_state(PART:"elm.text.slide_end_subtitle", pos, "slide_begin_landscape", 0.0, "slide_end_landscape", 0.0);
               }

               if (pos >= 1.0)
                 anim(1, "slide_end_pending", 1);
            }
         }

         public slide_to_end(val) {
            new slide_anim_id;
            new Float:duration;

            // Title Text
            if (val == 0) {
               if (get_int(title_slide_stop)) return;

               duration = get_float(title_duration);
               slide_anim_id = anim(duration, "slide_to_end_anim", 0);
               set_int(title_slide_anim_id, slide_anim_id);
            }
            // Subtitle Text
            else {
               if (get_int(subtitle_slide_stop)) return;

               duration = get_float(subtitle_duration);
               slide_anim_id = anim(duration, "slide_to_end_anim", 1);
               set_int(subtitle_slide_anim_id, slide_anim_id);
            }
         }

         public start_slide(val) {
            new Float:len;
            new buf[128];
            new st[31];
            new Float:vl;
            get_state(PART:"title_bg", st, 30, vl);
            if (!strcmp(st, "hide"))
               return;

            // Title Text
            if (val == 0) {
               set_int(title_slide_count, get_int(title_slide_count) + 1);

               if (get_int(title_slide_count) == 1) {
                  get_width(0);

                  if (get_int(title_text_w) <= get_int(org_title_text_w)) {
                     set_int(title_slide_count, 0);
                     return;
                  }

                  set_state(PART:"title_text_slide_effect_left", "visible", 0.0);
                  set_state(PART:"title_text_slide_effect_right", "visible", 0.0);

                  len = get_int(title_text_w) + NAVIFRAME_TITLE_SLIDE_TEXT_GAP;
                  set_float(title_duration, len * NAVIFRAME_TITLE_SLIDE_SPEED_WEIGHT);

                  set_int(title_slide_stop, 0);

                  get_text(PART:"elm.text.title", buf, 127);
                  set_text(PART:"elm.text.slide_begin_title", buf);
                  set_text(PART:"elm.text.slide_end_title", buf);
               }

               if (!get_int(subtitle)) {
                  set_state(PART:"elm.text.slide_begin_title", "title_slide_begin", 0.0);
                  set_state(PART:"elm.text.slide_end_title", "title_slide_begin", 0.0);
               }
               else {
                  set_state(PART:"elm.text.slide_begin_title", "maintitle_slide_begin", 0.0);
                  set_state(PART:"elm.text.slide_end_title", "maintitle_slide_begin", 0.0);
               }

               if (get_int(title_slide_count) == 1) {
                  set_state(PART:"title_text_clip", "slide", 0.0);
                  set_state(PART:"slide_title_text_clip", "slide", 0.0);
               }

               slide_to_end(0);
            }
            // Subtitle Text
            else {
               set_int(subtitle_slide_count, get_int(subtitle_slide_count) + 1);

               if (get_int(subtitle_slide_count) == 1) {
                  get_width(1);

                  if (get_int(subtitle_text_w) <= get_int(org_subtitle_text_w)) {
                     set_int(subtitle_slide_count, 0);
                     return;
                  }

                  set_state(PART:"subtitle_text_slide_effect_left", "visible", 0.0);
                  set_state(PART:"subtitle_text_slide_effect_right", "visible", 0.0);

                  len = get_int(subtitle_text_w) + NAVIFRAME_SUBTITLE_SLIDE_TEXT_GAP;
                  if (!get_int(landscape))
                    set_float(subtitle_duration, len * NAVIFRAME_TITLE_SLIDE_SPEED_WEIGHT);
                  else
                    set_float(subtitle_duration, len * NAVIFRAME_TITLE_SLIDE_SPEED_WEIGHT);

                  set_int(subtitle_slide_stop, 0);

                  get_text(PART:"elm.text.subtitle", buf, 127);
                  set_text(PART:"elm.text.slide_begin_subtitle", buf);
                  set_text(PART:"elm.text.slide_end_subtitle", buf);
               }

               if (!get_int(landscape)) {
                  set_state(PART:"elm.text.slide_begin_subtitle", "slide_begin", 0.0);
                  set_state(PART:"elm.text.slide_end_subtitle", "slide_begin", 0.0);
               }
               else {
                  set_state(PART:"elm.text.slide_begin_subtitle", "slide_begin_landscape", 0.0);
                  set_state(PART:"elm.text.slide_end_subtitle", "slide_begin_landscape", 0.0);
               }

               if (get_int(subtitle_slide_count) == 1) {
                  set_state(PART:"subtitle_text_clip", "slide", 0.0);
                  set_state(PART:"slide_subtitle_text_clip", "slide", 0.0);
               }

               slide_to_end(1);
            }
         }

         public stop_slide(val) {
            new slide_anim_id;

            // Title Text
            if (val == 0) {
               set_int(title_slide_stop, 1);
               set_int(title_slide_count, 0);

               slide_anim_id = get_int(title_slide_anim_id);
               cancel_anim(slide_anim_id);
               set_int(title_slide_anim_id, 0);

               set_text(PART:"elm.text.slide_begin_title", "");
               set_text(PART:"elm.text.slide_end_title", "");

               set_state(PART:"elm.text.slide_begin_title", "default", 0.0);
               set_state(PART:"elm.text.slide_end_title", "default", 0.0);

               set_state(PART:"title_text_clip", "default", 0.0);
               set_state(PART:"slide_title_text_clip", "default", 0.0);

               set_state(PART:"title_text_slide_effect_left", "default", 0.0);
               set_state(PART:"title_text_slide_effect_right", "default", 0.0);
            }
            // Subtitle Text
            else {
               set_int(subtitle_slide_stop, 1);
               set_int(subtitle_slide_count, 0);

               slide_anim_id = get_int(subtitle_slide_anim_id);
               cancel_anim(slide_anim_id);
               set_int(subtitle_slide_anim_id, 0);

               set_text(PART:"elm.text.slide_begin_subtitle", "");
               set_text(PART:"elm.text.slide_end_subtitle", "");

               set_state(PART:"elm.text.slide_begin_subtitle", "default", 0.0);
               set_state(PART:"elm.text.slide_end_subtitle", "default", 0.0);

               set_state(PART:"subtitle_text_clip", "default", 0.0);
               set_state(PART:"slide_subtitle_text_clip", "default", 0.0);

               set_state(PART:"subtitle_text_slide_effect_left", "default", 0.0);
               set_state(PART:"subtitle_text_slide_effect_right", "default", 0.0);
            }
         }
      }

      parts {
         part { name: "clipper";
            type: RECT;
            description { state: "default" 0.0;
               visible: 1;
            }
            description { state: "left" 0.0;
               visible: 0;
            }
         }
         part { name: "base";
            type: RECT;
            mouse_events:  0;
            description { state: "default" 0.0;
               visible: 0;
            }
            description { state: "left" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -1.0 0.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "right" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 1.0 0.0;
               rel2.relative: 2.0 1.0;
            }
         }
         part { name: "title_bg";
            type: IMAGE;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_TITLE_H_INC;
               max: -1 NAVIFRAME_TITLE_H_INC;
               align: 0.0 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; to: "base"; }
               rel2 { relative: 1.0 0.0; to: "base"; }
               image {
                  normal: "00_title_bg.png";
                  border: NAVIFRAME_TITLE_BG_IMAGE_BORDER_INC;
                  border_scale: 1;
               }
            }
            description { state: "landscape" 0.0;
               inherit: "default" 0.0;
               min: 1 NAVIFRAME_LANDSCAPE_TITLE_H_INC;
               max: -1 NAVIFRAME_LANDSCAPE_TITLE_H_INC;
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "title_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1 { to_y: "title_bg"; }
               rel2 { to_y: "title_bg"; }
            }
         }
         part { name: "title_right_padding";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: NAVIFRAME_PADDING_INC;
               fixed: 1 1;
               align: 1.0 0.0;
               rel1 { relative: 1.0 0.0; to: "divider2"; }
               rel2 { relative: 1.0 1.0; to: "divider2"; }
               visible: 0;
            }
            description { state: "title_left_btn_set" 0.0;
               inherit: "default" 0.0;
               rel1 { relative: 1.0 0.0; to: "divider1"; }
               rel2 { relative: 1.0 1.0; to: "divider1"; }
            }
         }
         part { name: "title_left_padding";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: NAVIFRAME_PADDING_INC;
               fixed: 1 1;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "title_bg"; }
               rel2 { relative: 0.0 1.0; to: "title_bg"; }
               visible: 0;
            }
            description { state: "icon" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_ICON_PADDING_INC;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "content_clip";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 1.0;
               rel1.to_x: "base";
               rel1.to_y: "title_bg";
               rel2.relative: 1.0 0.0;
               rel2.to_x: "base";
               rel2.to_y: "toolbar";
            }
         }
         part { name: "content_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1.to_y: "elm.swallow.content";
               rel2.to_y: "elm.swallow.content";
            }
         }
         part { name: "badge_padding";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               align: 1.0 0.0;
               rel1 { relative: 0.0 0.0; to: "title_right_padding"; }
               rel2 { relative: 0.0 1.0; to: "title_right_padding"; }
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_BADGE_PADDING_INC;
            }
         }
         part { name: "title_text_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               min: 0 NAVIFRAME_TITLE_TEXT_BG_H_INC;
               max: -1 NAVIFRAME_TITLE_TEXT_BG_H_INC;
               fixed: 1 1;
               rel1 { relative: 1.0 0.0; to_x: "title_left_padding"; to_y: "title_bg"; }
               rel2 { relative: 0.0 1.0; to_x: "title_right_padding"; to_y: "title_bg"; }
            }
            description { state: "subtitle_is_set" 0.0;
               inherit: "default" 0.0;
               min: 0 NAVIFRAME_LANDSCAPE_TITLE_TEXT_BG_H_INC;
               max: -1 NAVIFRAME_LANDSCAPE_TITLE_TEXT_BG_H_INC;
            }
         }
         part { name: "maintitle_text_bg";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               rel1 { relative: 0.0 0.0; to: "title_text_bg"; }
               rel2 { relative: 0.0 1.0; to_x: "badge_padding"; to_y: "title_text_bg"; }
            }
            description { state: "subtitle_is_set" 0.0;
               inherit: "default" 0.0;
               rel1 { relative: 0.0 0.0; to: "title_text_bg"; }
               rel2 { relative: 0.0 0.0; to_x: "badge_padding"; to_y: "subtitle_top_padding"; }
            }
         }
         part { name: "title_text_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               rel1.to: "maintitle_text_bg";
               rel2.to: "maintitle_text_bg";
            }
            description { state: "slide" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "elm.text.title";
            type: TEXT;
            effect: FAR_SHADOW BOTTOM;
            scale: 1;
            clip_to: "title_text_clip";
            description { state: "default" 0.0;
               text { font: "Tizen:style=Bold";
                  size: NAVIFRAME_TITLE_FONT_SIZE_INC;
                  size_range: NAVIFRAME_TITLE_FONT_MIN_SIZE_INC NAVIFRAME_TITLE_FONT_SIZE_INC;
                  fit: 1 0;
                  min: 0 0;
                  max: 1 0;
                  align: 0.0 0.5;
                  text_class: "tizen";
               }
               color: NAVIFRAME_TITLE_TEXT_COLOR_INC;
               color3: NAVIFRAME_TITLE_TEXT_SHADOW_COLOR_INC;
               align: 0.0 0.5;
               rel1.to: "maintitle_text_bg";
               rel2.to: "maintitle_text_bg";
            }
            description { state: "subtitle_is_set" 0.0;
               text { font: "Tizen:style=Bold";
                  size: NAVIFRAME_TITLE_SMALL_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.0 0.5;
                  text_class: "tizen";
               }
               color: NAVIFRAME_TITLE_TEXT_COLOR_INC;
               color3: NAVIFRAME_TITLE_TEXT_SHADOW_COLOR_INC;
               align: 0.0 0.5;
               rel1.to: "maintitle_text_bg";
               rel2.to: "maintitle_text_bg";
            }
            description { state: "subtitle_is_set_landscape" 0.0;
               inherit: "subtitle_is_set" 0.0;
               text.size: NAVIFRAME_LANDSCAPE_TITLE_SMALL_FONT_SIZE_INC;
            }
         }
         part { name: "slide_title_text_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               visible: 0;
               rel1.to: "elm.text.title";
               rel2.to: "elm.text.title";
            }
            description { state: "slide" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "slide_text_gap1";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 0;
               min: NAVIFRAME_TITLE_SLIDE_TEXT_GAP 0;
               max: NAVIFRAME_TITLE_SLIDE_TEXT_GAP -1;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "maintitle_text_bg"; }
               rel2 { relative: 0.0 1.0; to: "maintitle_text_bg"; }
            }
         }
         part { name: "elm.text.slide_begin_title";
            type: TEXT;
            effect: FAR_SHADOW BOTTOM;
            scale: 1;
            clip_to: "slide_title_text_clip";
            description { state: "default" 0.0;
               text { font: "Tizen:style=Bold";
                  size: NAVIFRAME_TITLE_FONT_SIZE_INC;
                  size_range: NAVIFRAME_TITLE_FONT_MIN_SIZE_INC NAVIFRAME_TITLE_FONT_SIZE_INC;
                  fit: 1 0;
                  min: 1 0;
                  max: 1 0;
                  align: 0.0 0.5;
                  text_class: "tizen";
               }
               color: NAVIFRAME_TITLE_TEXT_COLOR_INC;
               color3: NAVIFRAME_TITLE_TEXT_SHADOW_COLOR_INC;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1.to: "maintitle_text_bg";
               rel2.to: "maintitle_text_bg";
            }
            description { state: "title_slide_begin" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "title_slide_end" 0.0;
               inherit: "default" 0.0;
               text.align: 1.0 0.5;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "slide_text_gap1"; }
               rel2 { relative: 0.0 1.0; to: "slide_text_gap1"; }
            }
            description { state: "maintitle_slide_begin" 0.0;
               text { font: "Tizen:style=Bold";
                  size: NAVIFRAME_TITLE_SMALL_FONT_SIZE_INC;
                  min: 1 0;
                  max: 1 0;
                  align: 0.0 0.5;
                  text_class: "tizen";
               }
               color: NAVIFRAME_TITLE_TEXT_COLOR_INC;
               color3: NAVIFRAME_TITLE_TEXT_SHADOW_COLOR_INC;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 { relative: 0.0 0.0; to: "maintitle_text_bg"; }
               rel2 { relative: 0.0 1.0; to: "maintitle_text_bg"; }
            }
            description { state: "maintitle_slide_end" 0.0;
               inherit: "maintitle_slide_begin" 0.0;
               text.align: 1.0 0.5;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "slide_text_gap1"; }
               rel2 { relative: 0.0 1.0; to: "slide_text_gap1"; }
            }
            description { state: "maintitle_slide_begin_landscape" 0.0;
               inherit: "maintitle_slide_begin" 0.0;
               text.size: NAVIFRAME_LANDSCAPE_TITLE_SMALL_FONT_SIZE_INC;
            }
            description { state: "maintitle_slide_end_landscape" 0.0;
               inherit: "maintitle_slide_end" 0.0;
               text.size: NAVIFRAME_LANDSCAPE_TITLE_SMALL_FONT_SIZE_INC;
            }
         }
         part { name: "title_text_slide_effect_left_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: NAVIFRAME_PADDING_INC;
               align: 1.0 0.5;
               fixed: 1 1;
               visible: 0;
               rel1 { relative: 0.0 0.0; to: "elm.text.title"; }
               rel2 { relative: 0.0 1.0; to: "elm.text.title"; }
            }
         }
         part { name: "title_text_slide_effect_left";
            type: IMAGE;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_SIZE_INC;
               align: 0.0 0.5;
               fixed: 1 1;
               visible: 0;
               rel1 { relative: 0.0 0.0; to: "title_text_slide_effect_left_bg"; }
               rel2 { relative: 0.0 1.0; to: "title_text_slide_effect_left_bg"; }
               image {
                  normal: "00_effect_title_text_dim_left.png";
                  border: NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_BORDER_INC;
                  border_scale: 1;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.text.full_title";
            type: TEXT;
            scale: 1;
            clip_to: "slide_title_text_clip";
            description { state: "default" 0.0;
               visible: 0;
               text { font: "Tizen:style=Bold";
                  size: NAVIFRAME_TITLE_FONT_SIZE_INC;
                  size_range: NAVIFRAME_TITLE_FONT_MIN_SIZE_INC NAVIFRAME_TITLE_FONT_SIZE_INC;
                  fit: 1 0;
                  min: 1 0;
                  max: 1 0;
                  align: 0.0 0.5;
                  text_class: "tizen";
               }
               fixed: 1 0;
               align: 0.0 0.5;
               rel1.to: "maintitle_text_bg";
               rel2.to: "maintitle_text_bg";
            }
            description { state: "subtitle_is_set" 0.0;
               visible: 0;
               text { font: "Tizen:style=Bold";
                  size: NAVIFRAME_TITLE_SMALL_FONT_SIZE_INC;
                  min: 1 0;
                  max: 1 0;
                  align: 0.0 0.5;
                  text_class: "tizen";
               }
               fixed: 1 0;
               align: 0.0 0.5;
               rel1.to: "maintitle_text_bg";
               rel2.to: "maintitle_text_bg";
            }
            description { state: "subtitle_is_set_landscape" 0.0;
               inherit: "subtitle_is_set" 0.0;
               text.size: NAVIFRAME_LANDSCAPE_TITLE_SMALL_FONT_SIZE_INC;
            }
         }
         part { name: "slide_text_gap2";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 0;
               min: NAVIFRAME_TITLE_SLIDE_TEXT_GAP 0;
               max: NAVIFRAME_TITLE_SLIDE_TEXT_GAP -1;
               align: 0.0 0.5;
               rel1 { relative: 1.0 0.0; to: "elm.text.full_title"; }
               rel2 { relative: 1.0 1.0; to: "elm.text.full_title"; }
            }
         }
         part { name: "elm.text.slide_end_title";
            type: TEXT;
            effect: FAR_SHADOW BOTTOM;
            scale: 1;
            clip_to: "slide_title_text_clip";
            description { state: "default" 0.0;
               text { font: "Tizen:style=Bold";
                  size: NAVIFRAME_TITLE_FONT_SIZE_INC;
                  size_range: NAVIFRAME_TITLE_FONT_MIN_SIZE_INC NAVIFRAME_TITLE_FONT_SIZE_INC;
                  fit: 1 0;
                  min: 1 0;
                  max: 1 0;
                  align: 0.0 0.5;
                  text_class: "tizen";
               }
               color: NAVIFRAME_TITLE_TEXT_COLOR_INC;
               color3: NAVIFRAME_TITLE_TEXT_SHADOW_COLOR_INC;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1.to: "maintitle_text_bg";
               rel2.to: "maintitle_text_bg";
            }
            description { state: "title_slide_begin" 0.0;
               inherit: "default" 0.0;
               rel1 { relative: 1.0 0.0; to: "slide_text_gap2"; }
               rel2 { relative: 1.0 1.0; to: "slide_text_gap2"; }
            }
            description { state: "title_slide_end" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "maintitle_slide_begin" 0.0;
               text { font: "Tizen:style=Bold";
                  size: NAVIFRAME_TITLE_SMALL_FONT_SIZE_INC;
                  min: 1 0;
                  max: 1 0;
                  align: 0.0 0.5;
                  text_class: "tizen";
               }
               color: NAVIFRAME_TITLE_TEXT_COLOR_INC;
               color3: NAVIFRAME_TITLE_TEXT_SHADOW_COLOR_INC;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 { relative: 1.0 0.0; to: "slide_text_gap2"; }
               rel2 { relative: 1.0 1.0; to: "slide_text_gap2"; }
            }
            description { state: "maintitle_slide_end" 0.0;
               inherit: "maintitle_slide_begin" 0.0;
               rel1 { relative: 0.0 0.0; to: "maintitle_text_bg"; }
               rel2 { relative: 0.0 1.0; to: "maintitle_text_bg"; }
            }
            description { state: "maintitle_slide_begin_landscape" 0.0;
               inherit: "maintitle_slide_begin" 0.0;
               text.size: NAVIFRAME_LANDSCAPE_TITLE_SMALL_FONT_SIZE_INC;
            }
            description { state: "maintitle_slide_end_landscape" 0.0;
               inherit: "maintitle_slide_end" 0.0;
               text.size: NAVIFRAME_LANDSCAPE_TITLE_SMALL_FONT_SIZE_INC;
            }
         }
         part { name: "title_text_slide_effect_right_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: NAVIFRAME_PADDING_INC;
               align: 0.0 0.5;
               fixed: 1 1;
               visible: 0;
               rel1 { relative: 1.0 0.0; to: "elm.text.title"; }
               rel2 { relative: 1.0 1.0; to: "elm.text.title"; }
            }
         }
         part { name: "title_text_slide_effect_right";
            type: IMAGE;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_SIZE_INC;
               align: 1.0 0.5;
               fixed: 1 1;
               visible: 0;
               rel1 { relative: 1.0 0.0; to: "title_text_slide_effect_right_bg"; }
               rel2 { relative: 1.0 1.0; to: "title_text_slide_effect_right_bg"; }
               image {
                  normal: "00_effect_title_text_dim_right.png";
                  border: NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_BORDER_INC;
                  border_scale: 1;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "subtitle_top_padding";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
               align: 0.5 1.0;
               rel1 { relative: 0.0 0.0; to: "subtitle_text_bg"; }
               rel2 { relative: 1.0 0.0; to: "subtitle_text_bg"; }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               fixed: 0 1;
               min: 0 NAVIFRAME_SUBTITLE_TOP_PADDING_H_INC;
               max: -1 NAVIFRAME_SUBTITLE_TOP_PADDING_H_INC;
            }
            description { state: "visible_landscape" 0.0;
               inherit: "default" 0.0;
               fixed: 0 1;
               min: 0 NAVIFRAME_LANDSCAPE_SUBTITLE_TOP_PADDING_H_INC;
               max: -1 NAVIFRAME_LANDSCAPE_SUBTITLE_TOP_PADDING_H_INC;
            }
         }
         part { name: "subtitle_text_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
               align: 0.5 1.0;
               rel1 { relative: 0.0 1.0; to: "title_text_bg"; }
               rel2 { relative: 1.0 1.0; to: "title_text_bg"; }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               fixed: 0 1;
               min: 0 NAVIFRAME_SUBTITLE_H_INC;
               max: -1 NAVIFRAME_SUBTITLE_H_INC;
            }
            description { state: "visible_landscape" 0.0;
               inherit: "default" 0.0;
               fixed: 0 1;
               min: 0 NAVIFRAME_LANDSCAPE_SUBTITLE_H_INC;
               max: -1 NAVIFRAME_LANDSCAPE_SUBTITLE_H_INC;
            }
         }
         part { name: "subtitle_text_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               rel1.to: "subtitle_text_bg";
               rel2.to: "subtitle_text_bg";
            }
            description { state: "slide" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "elm.text.subtitle";
            type: TEXT;
            effect: FAR_SHADOW BOTTOM;
            scale: 1;
            clip_to: "subtitle_text_clip";
            description { state: "default" 0.0;
               text { font: "Tizen:style=Bold";
                  size: NAVIFRAME_SUBTITLE_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.0 0.5;
                  text_class: "tizen";
               }
               color: NAVIFRAME_SUBTITLE_TEXT_COLOR_INC;
               color3: NAVIFRAME_SUBTITLE_TEXT_SHADOW_COLOR_INC;
               align: 0.0 0.5;
               rel1.to: "subtitle_text_bg";
               rel2.to: "subtitle_text_bg";
            }
            description { state: "landscape" 0.0;
               inherit: "default" 0.0;
               text { font: "Tizen:style=Bold";
                  size: NAVIFRAME_LANDSCAPE_SUBTITLE_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.0 0.5;
                  text_class: "tizen";
               }
            }
         }
         part { name: "slide_subtitle_text_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               visible: 0;
               rel1.to: "elm.text.subtitle";
               rel2.to: "elm.text.subtitle";
            }
            description { state: "slide" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "slide_subtitle_divider1";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 0;
               min: NAVIFRAME_SUBTITLE_SLIDE_TEXT_GAP 0;
               max: NAVIFRAME_SUBTITLE_SLIDE_TEXT_GAP -1;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "subtitle_text_bg"; }
               rel2 { relative: 0.0 1.0; to: "subtitle_text_bg"; }
            }
         }
         part { name: "elm.text.slide_begin_subtitle";
            type: TEXT;
            effect: FAR_SHADOW BOTTOM;
            scale: 1;
            clip_to: "slide_subtitle_text_clip";
            description { state: "default" 0.0;
               text { font: "Tizen:style=Bold";
                  size: NAVIFRAME_SUBTITLE_FONT_SIZE_INC;
                  min: 1 0;
                  max: 1 0;
                  align: 0.0 0.5;
                  text_class: "tizen";
               }
               color: NAVIFRAME_SUBTITLE_TEXT_COLOR_INC;
               color3: NAVIFRAME_SUBTITLE_TEXT_SHADOW_COLOR_INC;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1.to: "subtitle_text_bg";
               rel2.to: "subtitle_text_bg";
            }
            description { state: "slide_begin" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "slide_end" 0.0;
               inherit: "default" 0.0;
               text.align: 1.0 0.5;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "slide_subtitle_divider1"; }
               rel2 { relative: 0.0 1.0; to: "slide_subtitle_divider1"; }
            }
            description { state: "slide_begin_landscape" 0.0;
               inherit: "default" 0.0;
               text.size: NAVIFRAME_LANDSCAPE_SUBTITLE_FONT_SIZE_INC;
               rel1 { relative: 0.0 0.0; to: "subtitle_text_bg"; }
               rel2 { relative: 0.0 1.0; to: "subtitle_text_bg"; }
            }
            description { state: "slide_end_landscape" 0.0;
               inherit: "slide_begin_landscape" 0.0;
               text.align: 1.0 0.5;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "slide_subtitle_divider1"; }
               rel2 { relative: 0.0 1.0; to: "slide_subtitle_divider1"; }
            }
         }
         part { name: "subtitle_text_slide_effect_left";
            type: IMAGE;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_SIZE_INC;
               align: 0.0 0.5;
               fixed: 1 1;
               visible: 0;
               rel1 { relative: 0.0 0.0; to_x: "title_text_slide_effect_left_bg"; to_y: "subtitle_text_bg"; }
               rel2 { relative: 0.0 1.0; to_x: "title_text_slide_effect_left_bg"; to_y: "subtitle_text_bg"; }
               image {
                  normal: "00_effect_title_text_dim_left.png";
                  border: NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_BORDER_INC;
                  border_scale: 1;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.text.full_subtitle";
            type: TEXT;
            scale: 1;
            clip_to: "slide_subtitle_text_clip";
            description { state: "default" 0.0;
               visible: 0;
               text { font: "Tizen:style=Bold";
                  size: NAVIFRAME_SUBTITLE_FONT_SIZE_INC;
                  min: 1 0;
                  max: 1 0;
                  align: 0.0 0.5;
                  text_class: "tizen";
               }
               fixed: 1 0;
               align: 0.0 0.5;
               rel1.to: "subtitle_text_bg";
               rel2.to: "subtitle_text_bg";
            }
            description { state: "landscape" 0.0;
               inherit: "default" 0.0;
               text.size: NAVIFRAME_LANDSCAPE_SUBTITLE_FONT_SIZE_INC;
            }
         }
         part { name: "slide_subtitle_divider2";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 0;
               min: NAVIFRAME_SUBTITLE_SLIDE_TEXT_GAP 0;
               max: NAVIFRAME_SUBTITLE_SLIDE_TEXT_GAP -1;
               align: 0.0 0.5;
               rel1 { relative: 1.0 0.0; to: "elm.text.full_subtitle"; }
               rel2 { relative: 1.0 1.0; to: "elm.text.full_subtitle"; }
            }
         }
         part { name: "elm.text.slide_end_subtitle";
            type: TEXT;
            effect: FAR_SHADOW BOTTOM;
            scale: 1;
            clip_to: "slide_subtitle_text_clip";
            description { state: "default" 0.0;
               text { font: "Tizen:style=Bold";
                  size: NAVIFRAME_SUBTITLE_FONT_SIZE_INC;
                  min: 1 0;
                  max: 1 0;
                  align: 0.0 0.5;
                  text_class: "tizen";
               }
               color: NAVIFRAME_SUBTITLE_TEXT_COLOR_INC;
               color3: NAVIFRAME_SUBTITLE_TEXT_SHADOW_COLOR_INC;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1.to: "subtitle_text_bg";
               rel2.to: "subtitle_text_bg";
            }
            description { state: "slide_begin" 0.0;
               inherit: "default" 0.0;
               rel1 { relative: 1.0 0.0; to: "slide_subtitle_divider2"; }
               rel2 { relative: 1.0 1.0; to: "slide_subtitle_divider2"; }
            }
            description { state: "slide_end" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "slide_begin_landscape" 0.0;
               inherit: "default" 0.0;
               text.size: NAVIFRAME_LANDSCAPE_SUBTITLE_FONT_SIZE_INC;
               rel1 { relative: 1.0 0.0; to: "slide_subtitle_divider2"; }
               rel2 { relative: 1.0 1.0; to: "slide_subtitle_divider2"; }
            }
            description { state: "slide_end_landscape" 0.0;
               inherit: "slide_begin_landscape" 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 0.0 1.0;
            }
         }
         part { name: "subtitle_text_slide_effect_right_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: NAVIFRAME_PADDING_INC;
               align: 0.0 0.5;
               fixed: 1 1;
               visible: 0;
               rel1 { relative: 1.0 0.0; to: "elm.text.subtitle"; }
               rel2 { relative: 1.0 1.0; to: "elm.text.subtitle"; }
            }
         }
         part { name: "subtitle_text_slide_effect_right";
            type: IMAGE;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_SIZE_INC;
               align: 1.0 0.5;
               fixed: 1 1;
               visible: 0;
               rel1 { relative: 1.0 0.0; to: "subtitle_text_slide_effect_right_bg"; }
               rel2 { relative: 1.0 1.0; to: "subtitle_text_slide_effect_right_bg"; }
               image {
                  normal: "00_effect_title_text_dim_right.png";
                  border: NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_BORDER_INC;
                  border_scale: 1;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "padding_before_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_text_bg"; }
               rel2 { relative: 0.0 1.0; to: "title_text_bg"; }
               fixed: 1 0;
               min: NAVIFRAME_PADDING2_INC;
               visible: 0;
            }
         }
         part { name: "badge_top_padding";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               min: NAVIFRAME_BADGE_TOP_PADDING_INC;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; to: "title_bg"; }
               rel2 { relative: 1.0 0.0; to: "title_bg"; }
               align: 0.0 0.0;
            }
            description { state: "subtitle_is_set" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               fixed: 0 1;
            }
         }
         part { name: "badge_left_padding";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               min: 0 0;
               fixed: 1 1;
               rel1 { relative: 1.0 1.0; to_x: "elm.text.title"; to_y: "badge_top_padding"; }
               rel2 { relative: 1.0 1.0; to_x: "elm.text.title"; to_y: "badge_top_padding"; }
               align: 0.0 0.0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_BADGE_LEFT_PADDING_INC;
            }
         }
         part { name: "left.padding.text";
            type: RECT;
            scale: 1;
            description {
               state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               min: 0 0;
               rel1 {
                  to: "badge_left_padding";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to: "badge_left_padding";
                  relative: 1.0 1.0;
               }
               align: 0.0 0.0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_BADGE_TEXT_LEFT_PADDING_INC;
            }
         }
         part { name: "right.padding.text";
            type: RECT;
            scale: 1;
            description {
               state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               min: 0 0;
               rel1 {
                  to: "title_badge";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to: "title_badge";
                  relative: 1.0 1.0;
               }
               align: 0.0 0.0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_BADGE_TEXT_LEFT_PADDING_INC;
            }
         }
         part { name: "badge_bg";
            type: IMAGE;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               visible: 0;
               min: 0 0;
               fixed: 1 1;
               rel1 {
                  to: "left.padding.text";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "right.padding.text";
                  relative: 1.0 1.0;
               }
               image {
                  normal: "00_badge_bg.png";
                  border: NAVIFRAME_BADGE_BG_IMAGE_BORDER_INC;
                  border_scale: 1;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: NAVIFRAME_BADGE_BG_IMAGE_SIZE_INC;
            }
         }
         part { name: "title_badge";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               visible: 0;
               min: NAVIFRAME_BADGE_TEXT_MIN_W_INC 0;
               max: NAVIFRAME_BADGE_TEXT_MAX_W_INC -1;
               fixed: 1 1;
               rel1 { relative: 1.0 0.0; to: "left.padding.text"; }
               rel2 { relative: 1.0 1.0; to_y: "left.padding.text"; to_x: "badge_padding"; }
               align: 0.0 0.5;
               color: NAVIFRAME_BADGE_TEXT_COLOR_INC;
               text {
                  font: "Tizen:style=Bold";
                  size: NAVIFRAME_BADGE_TEXT_H_INC;
                  min: 0 0;
                  max: 1 0;
                  text_class: "tizen";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "click_event_area";
             type: RECT;
             ignore_flags: ON_HOLD;
             description { state: "default" 0.0;
                rel1 { to: "title_bg"; }
                rel2 { to: "title_bg"; }
                color: 0 0 0 0;
             }
         }
         part { name: "access.title";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1.to: "title_bg";
               rel2.to: "title_bg";
               color: 0 0 0 0;
            }
         }
         part { name: "divider1";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 0 0;
               max: 0 -1;
               fixed: 1 1;
               color: NAVIFRAME_TITLE_BUTTON_DIVIDER_COLOR_INC;
               rel1 { relative: 0.0 0.0; to: "title_left_btn"; }
               rel2 { relative: 0.0 1.0; to: "title_left_btn"; }
               align: 1.0 0.5;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: 2 48;
               max: 2 48;
            }
         }
         part { name: "title_left_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "divider2"; }
               rel2 { relative: 0.0 1.0; to: "divider2"; }
            }
            description { state: "landscape" 0.0;
               inherit: "default" 0.0;
               max: NAVIFRAME_LANDSCAPE_TITLE_FUNC_BTN_SIZE_INC;
            }
         }
         part { name: "divider2";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 0 0;
               max: 0 -1;
               fixed: 1 1;
               color: NAVIFRAME_TITLE_BUTTON_DIVIDER_COLOR_INC;
               rel1 { relative: 0.0 0.0; to: "title_right_btn"; }
               rel2 { relative: 0.0 1.0; to: "title_right_btn"; }
               align: 1.0 0.5;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: 2 48;
               max: 2 48;
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_ICON_SIZE_INC;
               fixed: 1 1;
               rel1 { relative: 0.0 0.0; to: "padding_before_text"; }
               rel2 { relative: 0.0 1.0; to: "padding_before_text"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 1.0 0.5;
            }
         }
         part { name: "title_right_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1 { relative: 1.0 0.0; to: "title_bg"; }
               rel2 { relative: 1.0 1.0; to: "title_bg"; }
            }
            description { state: "landscape" 0.0;
               inherit: "default" 0.0;
               max: NAVIFRAME_LANDSCAPE_TITLE_FUNC_BTN_SIZE_INC;
            }
         }
         part { name: "toolbar";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 999999 0;
               fixed: 0 1;
               align: 0.0 1.0;
               visible: 0;
               rel1 { to: "base"; }
               rel2 { to: "base"; }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: 0 NAVIFRAME_TOOLBAR_HEIGHT_INC;
               max: 999999 NAVIFRAME_TOOLBAR_HEIGHT_INC;
               visible: 1;
            }
            description { state: "visible_landscape" 0.0;
               inherit: "default" 0.0;
               min: 0 NAVIFRAME_LANDSCAPE_TOOLBAR_HEIGHT_INC;
               max: 999999 NAVIFRAME_LANDSCAPE_TOOLBAR_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "more_btn_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 0;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "toolbar"; }
               rel2 { relative: 0.0 1.0; to: "toolbar"; }
               visible: 0;
            }
         }
         part { name: "toolbar_more_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               rel1.to: "more_btn_bg";
               rel2.to: "more_btn_bg";
               visible: 0;
            }
            description { state: "landscape" 0.0;
               inherit: "default" 0.0;
               max: NAVIFRAME_LANDSCAPE_PREV_FUNC_BTN_SIZE_INC;
            }
         }
         part { name: "prev_btn_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 0;
               align: 1.0 0.0;
               rel1 { relative: 1.0 0.0; to: "toolbar"; }
               rel2.to: "toolbar";
               visible: 0;
            }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "prev_btn_bg";
               rel2.to: "prev_btn_bg";
               visible: 0;
            }
            description { state: "landscape" 0.0;
               inherit: "default" 0.0;
               max: NAVIFRAME_LANDSCAPE_PREV_FUNC_BTN_SIZE_INC;
            }
         }
         part { name: "toolbar_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1 { to: "toolbar"; }
               rel2 { to: "toolbar"; }
            }
         }
      }
      programs {
         program { name: "content_new_pushed";
            signal: "elm,state,new,pushed,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_pushed";
            signal: "elm,state,cur,pushed,deferred";
            source: "elm";
            action: STATE_SET "left" 0.0;
            target: "base";
            target: "clipper";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "pushed_finished";
         }
         program { name: "content_prev_popped";
            signal: "elm,state,prev,popped,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            target: "clipper";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_popped";
            signal: "elm,state,cur,popped,deferred";
            source: "elm";
            action: STATE_SET "right" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "popped_finished";
         }
         program { name: "cur_pushed";
            signal: "elm,state,cur,pushed";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            action: STATE_SET "right" 0.0;
            target: "base";
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            action: STATE_SET "left" 0.0;
            target: "base";
         }
         program { name: "cur_popped";
            signal: "elm,state,cur,popped";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
         }
         program { name: "visible";
            signal: "elm,state,visible";
            source: "elm";
            script {
               set_state(PART:"base", "default", 0.0);
               set_state(PART:"clipper", "default", 0.0);
               emit("elm,action,title,slide", "");
            }
         }
         program { name: "title_slide";
            signal: "elm,action,title,slide";
            source: "";
            script {
               if (get_int(title_slide_anim_id))
                 stop_slide(0);
               timer(1.5, "start_slide", 0);

               if (get_int(subtitle)) {
                 if (get_int(subtitle_slide_anim_id))
                   stop_slide(0);
                 timer(1.5, "start_slide", 1);
               }
            }
         }
         program { name: "title_show";
            signal: "elm,state,title,show";
            source: "elm";
            script {
               if (!get_int(landscape))
                 set_state(PART:"title_bg", "default", 0.0);
               else
                 set_state(PART:"title_bg", "landscape", 0.0);
            }
         }
         program { name: "title_hide";
            signal: "elm,state,title,hide";
            source: "elm";
            script {
               set_state(PART:"title_bg", "hide", 0.0);
            }
         }
         program { name: "subtitle_show";
            signal: "elm,state,subtitle,show";
            source: "elm";
            script {
               set_state(PART:"badge_top_padding", "subtitle_is_set", 0.0);
               set_state(PART:"maintitle_text_bg", "subtitle_is_set", 0.0);
               if (!get_int(landscape)) {
                  set_state(PART:"elm.text.title", "subtitle_is_set", 0.0);
                  set_state(PART:"subtitle_top_padding", "visible", 0.0);
                  set_state(PART:"subtitle_text_bg", "visible", 0.0);
               }
               else {
                  set_state(PART:"elm.text.title", "subtitle_is_set_landscape", 0.0);
                  set_state(PART:"subtitle_top_padding", "visible_landscape", 0.0);
                  set_state(PART:"subtitle_text_bg", "visible_landscape", 0.0);
               }
               set_int(subtitle, 1);
            }
         }
         program { name: "subtitle_hide";
            signal: "elm,state,subtitle,hide";
            source: "elm";
            script {
               set_state(PART:"badge_top_padding", "default", 0.0);
               set_state(PART:"maintitle_text_bg", "default", 0.0);
               set_state(PART:"subtitle_top_padding", "default", 0.0);
               set_state(PART:"subtitle_text_bg", "default", 0.0);
               set_state(PART:"elm.text.title", "default", 0.0);
               set_int(subtitle, 0);
            }
         }
         program { name: "icon_show";
            signal: "elm,state,icon,show";
            source: "elm";
            action: STATE_SET "icon" 0.0;
            target: "title_left_padding";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "title_left_padding";
         }
         program { name: "title_left_btn_show";
            signal: "elm,state,title_left_btn,show";
            source: "elm";
            script {
               set_state(PART:"divider1", "visible", 0.0);
               set_state(PART:"title_right_padding", "title_left_btn_set", 0.0);
            }
         }
         program { name: "title_left_btn_hide";
            signal: "elm,state,title_left_btn,hide";
            source: "elm";
            script {
               set_state(PART:"divider1", "default", 0.0);
               set_state(PART:"title_right_padding", "default", 0.0);
            }
         }
         program { name: "title_right_btn_show";
            signal: "elm,state,title_right_btn,show";
            source: "elm";
            action: STATE_SET "visible" 0.0;
            target: "divider2";
         }
         program { name: "title_right_btn_hide";
            signal: "elm,state,title_right_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "divider2";
         }
         program { name: "toolbar_show";
            signal: "elm,state,toolbar,show";
            source: "elm";
            script {
               if (!get_int(landscape))
                 set_state(PART:"toolbar", "visible", 0.0);
               else
                 set_state(PART:"toolbar", "visible_landscape", 0.0);
               set_int(tbar_bg, get_int(tbar_bg) + 1);
            }
         }
         program { name: "toolbar_hide";
            signal: "elm,state,toolbar,hide";
            source: "elm";
            script {
               set_int(tbar_bg, get_int(tbar_bg) - 1);
               if (get_int(tbar_bg) <= 0)
                 set_state(PART:"toolbar", "default", 0.0);
            }
         }
         program { name: "toolbar_open_internal";
            signal: "elm,state,toolbar,open,internal";
            source: "elm";
            script {
               set_int(tbar_close, 0);
               if (!get_int(landscape))
                 set_state(PART:"toolbar", "visible", 0.0);
               else
                 set_state(PART:"toolbar", "visible_landscape", 0.0);
            }
         }
         program { name: "toolbar_close_internal";
            signal: "elm,state,toolbar,close,internal";
            source: "elm";
            script {
               set_int(tbar_close, 1);
               set_state(PART:"toolbar", "default", 0.0);
            }
         }
         program { name: "toolbar_open";
            signal: "elm,state,toolbar,open";
            source: "";
            script {
               if (!get_int(landscape))
                 set_state(PART:"toolbar", "visible", 0.0);
               else
                 set_state(PART:"toolbar", "visible_landscape", 0.0);
            }
            transition: LINEAR 0.2;
            after: "toolbar_open_internal";
         }
         program { name: "toolbar_close";
            signal: "elm,state,toolbar,close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "toolbar";
            transition: LINEAR 0.2;
            after: "toolbar_close_internal";
         }
         program { name: "toolbar_instant_open";
            signal: "elm,state,toolbar,instant_open";
            source: "";
            script {
               emit("elm,state,toolbar,open,internal", "elm");
            }
         }
         program { name: "toolbar_instant_close";
            signal: "elm,state,toolbar,instant_close";
            source: "";
            script {
               emit("elm,state,toolbar,close,internal", "elm");
            }
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            script {
               if (get_int(title_slide_anim_id))
                 stop_slide(0);

               if (get_int(subtitle)) {
                 if (get_int(subtitle_slide_anim_id))
                   stop_slide(0);
               }
               emit("elm,action,pushed,finished", "");
            }
         }
         program { name: "popped_finished";
            script {
               if (get_int(title_slide_anim_id))
                 stop_slide(0);

               if (get_int(subtitle)) {
                 if (get_int(subtitle_slide_anim_id))
                   stop_slide(0);
               }
               emit("elm,action,popped,finished", "");
            }
         }
         program {
            name: "title_clicked";
            signal: "mouse,clicked,1";
            source: "click_event_area";
            script {
               emit("elm,action,title,clicked", "");
            }
         }
         program {
            name: "title_badge_show";
            signal: "elm,state,title_badge,show";
            source: "elm";
            script {
               set_state(PART:"badge_left_padding", "visible", 0.0);
               set_state(PART:"badge_padding", "visible", 0.0);
               set_state(PART:"left.padding.text", "visible", 0.0);
               set_state(PART:"right.padding.text", "visible", 0.0);
               set_state(PART:"badge_bg", "visible", 0.0);
               set_state(PART:"title_badge", "visible", 0.0);
               set_int(title_badge_visible, 1);
            }
         }
         program {
            name: "title_badge_hide";
            signal: "elm,state,title_badge,hide";
            source: "elm";
            script {
               set_state(PART:"badge_left_padding", "default", 0.0);
               set_state(PART:"badge_padding", "default", 0.0);
               set_state(PART:"left.padding.text", "default", 0.0);
               set_state(PART:"right.padding.text", "default", 0.0);
               set_state(PART:"badge_bg", "default", 0.0);
               set_state(PART:"title_badge", "default", 0.0);
               set_int(title_badge_visible, 0);
            }
         }
         program {
            name: "change_to_landscape";
            signal: "elm,state,landscape";
            source: "elm";
            script {
               if (!get_int(landscape)) {
                  set_state(PART:"title_text_bg", "landscape", 0.0);
                  set_state(PART:"elm.text.subtitle", "landscape", 0.0);
                  set_state(PART:"title_left_btn", "landscape", 0.0);
                  set_state(PART:"title_right_btn", "landscape", 0.0);
                  set_state(PART:"toolbar_more_btn", "landscape", 0.0);
                  set_state(PART:"elm.swallow.prev_btn", "landscape", 0.0);

                  new st[31];
                  new Float:vl;
                  get_state(PART:"title_bg", st, 30, vl);
                  if (!strcmp(st, "default"))
                    set_state(PART:"title_bg", "landscape", 0.0);

                  get_state(PART:"elm.text.title", st, 30, vl);
                  if (!strcmp(st, "subtitle_is_set"))
                    set_state(PART:"elm.text.title", "subtitle_is_set_landscape", 0.0);

                  get_state(PART:"subtitle_top_padding", st, 30, vl);
                  if (!strcmp(st, "visible"))
                    set_state(PART:"subtitle_top_padding", "visible_landscape", 0.0);

                  get_state(PART:"subtitle_text_bg", st, 30, vl);
                  if (!strcmp(st, "visible"))
                    set_state(PART:"subtitle_text_bg", "visible_landscape", 0.0);

                  get_state(PART:"toolbar", st, 30, vl);
                  if (!strcmp(st, "visible"))
                    set_state(PART:"toolbar", "visible_landscape", 0.0);

                  set_int(landscape, 1);
               }
            }
         }
         program {
            name: "change_to_portrait";
            signal: "elm,state,portrait";
            source: "elm";
            script {
               if (get_int(landscape)) {
                  set_state(PART:"title_text_bg", "default", 0.0);
                  set_state(PART:"elm.text.subtitle", "default", 0.0);
                  set_state(PART:"title_left_btn", "default", 0.0);
                  set_state(PART:"title_right_btn", "default", 0.0);
                  set_state(PART:"toolbar_more_btn", "default", 0.0);
                  set_state(PART:"elm.swallow.prev_btn", "default", 0.0);

                  new st[31];
                  new Float:vl;
                  get_state(PART:"title_bg", st, 30, vl);
                  if (!strcmp(st, "landscape"))
                    set_state(PART:"title_bg", "default", 0.0);

                  get_state(PART:"elm.text.title", st, 30, vl);
                  if (!strcmp(st, "subtitle_is_set_landscape"))
                    set_state(PART:"elm.text.title", "subtitle_is_set", 0.0);

                  get_state(PART:"subtitle_top_padding", st, 30, vl);
                  if (!strcmp(st, "visible_landscape"))
                    set_state(PART:"subtitle_top_padding", "visible", 0.0);

                  get_state(PART:"subtitle_text_bg", st, 30, vl);
                  if (!strcmp(st, "visible_landscape"))
                    set_state(PART:"subtitle_text_bg", "visible", 0.0);

                  get_state(PART:"toolbar", st, 30, vl);
                  if (!strcmp(st, "visible_landscape"))
                    set_state(PART:"toolbar", "visible", 0.0);

                  set_int(landscape, 0);
               }
            }
         }
         program { name: "landscape_mode";
            source: "elm";
            signal: "elm,state,orient,90";
            action: SIGNAL_EMIT "elm,state,landscape" "elm";
         }
         program { name: "landscape_mode2";
            source: "elm";
            signal: "elm,state,orient,270";
            action: SIGNAL_EMIT "elm,state,landscape" "elm";
         }
         program { name: "portrait_mode";
            source: "elm";
            signal: "elm,state,orient,0";
            action: SIGNAL_EMIT "elm,state,portrait" "elm";
         }
         program { name: "portrait_mode2";
            source: "elm";
            signal: "elm,state,orient,180";
            action: SIGNAL_EMIT "elm,state,portrait" "elm";
         }
      }
   }

   group { name: "elm/naviframe/item/tabbar/default";
      images {
         image: "00_title_bg.png" COMP;
         image: "00_effect_title_text_dim_left.png" COMP;
         image: "00_effect_title_text_dim_right.png" COMP;
      }
      script {
         public tbar_bg = 0;     //Controlbar BG Show call count
         public tbar_close = 0; //Toolbar lastest Open/Close status
         public landscape = 0; //Landscape mode status

         public title_duration = 0;
         public title_slide_stop;
         public title_slide_anim_id;
         public title_text_w;
         public org_title_text_w;
         public title_slide_count = 0;

         public get_width(val) {
            new x, y, w, h;
            new buf[128];
            new st[31];
            new Float:vl;

            get_geometry(PART:"elm.text.title", x, y, w, h);
            set_int(org_title_text_w, w);

            get_text(PART:"elm.text.title", buf, 127);
            set_text(PART:"elm.text.full_title", buf);
            get_state(PART:"elm.text.title", st, 30, vl);
            set_state(PART:"elm.text.full_title", st, 0.0);
            get_geometry(PART:"elm.text.full_title", x, y, w, h);
            set_int(title_text_w, w);
         }

         public slide_end_pending(val, Float:pos) {
            if (pos >= 1.0) {
               if (get_int(title_slide_count) < NAVIFRAME_TITLE_SLIDE_MAX_COUNT)
                 start_slide(0);
               else
                 stop_slide(0);
            }
         }

         public slide_to_end_anim(val, Float:pos) {
            if (get_int(title_slide_stop)) return;

            if (!get_int(landscape)) {
               set_tween_state(PART:"elm.text.slide_begin_title", pos, "slide_begin", 0.0, "slide_end", 0.0);
               set_tween_state(PART:"elm.text.slide_end_title", pos, "slide_begin", 0.0, "slide_end", 0.0);
            }
            else {
               set_tween_state(PART:"elm.text.slide_begin_title", pos, "slide_begin_landscape", 0.0, "slide_end_landscape", 0.0);
               set_tween_state(PART:"elm.text.slide_end_title", pos, "slide_begin_landscape", 0.0, "slide_end_landscape", 0.0);
            }

            if (pos >= 1.0)
              anim(1, "slide_end_pending", 0);
         }

         public slide_to_end(val) {
            new slide_anim_id;
            new Float:duration;

            if (get_int(title_slide_stop)) return;

            duration = get_float(title_duration);
            slide_anim_id = anim(duration, "slide_to_end_anim", 0);
            set_int(title_slide_anim_id, slide_anim_id);
         }

         public start_slide(val) {
            new Float:len;
            new buf[128];
            new st[31];
            new Float:vl;
            get_state(PART:"title_bg", st, 30, vl);
            if (!strcmp(st, "hide"))
               return;

            set_int(title_slide_count, get_int(title_slide_count) + 1);

            if (get_int(title_slide_count) == 1) {
               get_width(0);

               if (get_int(title_text_w) <= get_int(org_title_text_w)) {
                  set_int(title_slide_count, 0);
                  return;
               }

               set_state(PART:"title_text_slide_effect_left", "visible", 0.0);
               set_state(PART:"title_text_slide_effect_right", "visible", 0.0);

               len = get_int(title_text_w) + NAVIFRAME_TITLE_SLIDE_TEXT_GAP;

               if (get_int(landscape))
                 set_float(title_duration, len * NAVIFRAME_TITLE_SLIDE_SPEED_WEIGHT);
               else
                 set_float(title_duration, len * NAVIFRAME_TITLE_SLIDE_SPEED_WEIGHT);

               set_int(title_slide_stop, 0);

               get_text(PART:"elm.text.title", buf, 127);
               set_text(PART:"elm.text.slide_begin_title", buf);
               set_text(PART:"elm.text.slide_end_title", buf);
            }

            if (!get_int(landscape)) {
               set_state(PART:"elm.text.slide_begin_title", "slide_begin", 0.0);
               set_state(PART:"elm.text.slide_end_title", "slide_begin", 0.0);
            }
            else {
               set_state(PART:"elm.text.slide_begin_title", "slide_begin_landscape", 0.0);
               set_state(PART:"elm.text.slide_end_title", "slide_begin_landscape", 0.0);
            }

            if (get_int(title_slide_count) == 1) {
               set_state(PART:"title_text_clip", "slide", 0.0);
               set_state(PART:"slide_title_text_clip", "slide", 0.0);
            }

            slide_to_end(0);
         }

         public stop_slide(val) {
            new slide_anim_id;

            set_int(title_slide_stop, 1);
            set_int(title_slide_count, 0);

            slide_anim_id = get_int(title_slide_anim_id);
            cancel_timer(slide_anim_id);
            set_int(title_slide_anim_id, 0);

            set_text(PART:"elm.text.slide_begin_title", "");
            set_text(PART:"elm.text.slide_end_title", "");

            set_state(PART:"elm.text.slide_begin_title", "default", 0.0);
            set_state(PART:"elm.text.slide_end_title", "default", 0.0);

            set_state(PART:"title_text_clip", "default", 0.0);
            set_state(PART:"slide_title_text_clip", "default", 0.0);

            set_state(PART:"title_text_slide_effect_left", "default", 0.0);
            set_state(PART:"title_text_slide_effect_right", "default", 0.0);
         }
      }

      parts {
         part { name: "clipper";
            type: RECT;
            description { state: "default" 0.0;
               visible: 1;
            }
            description { state: "left" 0.0;
               visible: 0;
            }
         }
         part { name: "base";
            type: RECT;
            mouse_events:  0;
            description { state: "default" 0.0;
               visible: 0;
            }
            description { state: "left" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -1.0 0.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "right" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 1.0 0.0;
               rel2.relative: 2.0 1.0;
            }
         }
         part { name: "title_bg";
            type: IMAGE;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_TAB_TITLE_H_INC;
               max: -1 NAVIFRAME_TAB_TITLE_H_INC;
               align: 0.0 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; to: "base"; }
               rel2 { relative: 1.0 0.0; to: "base"; }
               image {
                  normal: "00_title_bg.png";
                  border: NAVIFRAME_TITLE_BG_IMAGE_BORDER_INC;
                  border_scale: 1;
               }
            }
            description { state: "landscape" 0.0;
               inherit: "default" 0.0;
               min: 1 NAVIFRAME_LANDSCAPE_TAB_TITLE_H_INC;
               max: -1 NAVIFRAME_LANDSCAPE_TAB_TITLE_H_INC;
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "title_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1 { to_y: "title_bg"; }
               rel2 { to_y: "title_bg"; }
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "content_clip";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 1.0;
               rel1.to_x: "base";
               rel1.to_y: "title_bg";
               rel2.relative: 1.0 0.0;
               rel2.to_x: "base";
               rel2.to_y: "toolbar";
            }
         }
         part { name: "content_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1.to_y: "elm.swallow.content";
               rel2.to_y: "elm.swallow.content";
            }
         }
         part { name: "title_left_padding";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_bg"; }
               rel2 { relative: 0.0 1.0; to: "title_bg"; }
               fixed: 1 0;
               min: NAVIFRAME_PADDING_INC;
               visible: 0;
            }
         }
         part { name: "title_right_padding";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1 { relative: 1.0 0.0; to: "title_bg"; }
               rel2 { relative: 1.0 1.0; to: "title_bg"; }
               fixed: 1 0;
               min: NAVIFRAME_PADDING_INC;
               visible: 0;
            }
         }
         part { name: "title_text_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               min: 0 NAVIFRAME_TITLE_TAB_TEXT_H_INC;
               max: -1 NAVIFRAME_TITLE_TAB_TEXT_H_INC;
               fixed: 1 1;
               align: 0.5 0.0;
               rel1 { relative: 1.0 0.0; to_x: "title_left_padding"; to_y: "title_bg"; }
               rel2 { relative: 0.0 0.0; to_x: "title_right_padding"; to_y: "title_bg"; }
            }
            description { state: "subtitle_is_set" 0.0;
               inherit: "default" 0.0;
               min: 0 NAVIFRAME_LANDSCAPE_TITLE_TAB_TEXT_H_INC;
               max: -1 NAVIFRAME_LANDSCAPE_TITLE_TAB_TEXT_H_INC;
            }
         }
         part { name: "title_text_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               rel1.to: "title_text_bg";
               rel2.to: "title_text_bg";
            }
            description { state: "slide" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "elm.text.title";
            type: TEXT;
            effect: FAR_SHADOW BOTTOM;
            scale: 1;
            clip_to: "title_text_clip";
            description { state: "default" 0.0;
               visible: 1;
               text { font: "Tizen:style=Bold";
                  size: NAVIFRAME_TITLE_TAB_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.0 0.5;
                  text_class: "tizen";
               }
               color: NAVIFRAME_TITLE_TEXT_COLOR_INC;
               color3: NAVIFRAME_TITLE_TEXT_SHADOW_COLOR_INC;
               align: 0.0 0.5;
               rel1.to: "title_text_bg";
               rel2.to: "title_text_bg";
            }
            description { state: "landscape" 0.0;
               inherit: "default" 0.0;
               text { font: "Tizen:style=Bold";
                  size: NAVIFRAME_LANDSCAPE_TITLE_TAB_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.0 0.5;
                  text_class: "tizen";
               }
            }
         }
         part { name: "slide_title_text_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               visible: 0;
               rel1.to: "elm.text.title";
               rel2.to: "elm.text.title";
            }
            description { state: "slide" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "slide_text_gap1";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 0;
               min: NAVIFRAME_TITLE_SLIDE_TEXT_GAP 0;
               max: NAVIFRAME_TITLE_SLIDE_TEXT_GAP -1;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_text_bg"; }
               rel2 { relative: 0.0 1.0; to: "title_text_bg"; }
            }
         }
         part { name: "elm.text.slide_begin_title";
            type: TEXT;
            effect: FAR_SHADOW BOTTOM;
            scale: 1;
            clip_to: "slide_title_text_clip";
            description { state: "default" 0.0;
               visible: 1;
               text { font: "Tizen:style=Bold";
                  size: NAVIFRAME_TITLE_TAB_FONT_SIZE_INC;
                  min: 1 0;
                  max: 1 0;
                  align: 0.0 0.5;
                  text_class: "tizen";
               }
               color: NAVIFRAME_TITLE_TEXT_COLOR_INC;
               color3: NAVIFRAME_TITLE_TEXT_SHADOW_COLOR_INC;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1.to: "title_text_bg";
               rel2.to: "title_text_bg";
            }
            description { state: "slide_begin" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "slide_end" 0.0;
               inherit: "default" 0.0;
               text.align: 1.0 0.5;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "slide_text_gap1"; }
               rel2 { relative: 0.0 1.0; to: "slide_text_gap1"; }
            }
            description { state: "slide_begin_landscape" 0.0;
               inherit: "slide_begin" 0.0;
               text.size: NAVIFRAME_LANDSCAPE_TITLE_TAB_FONT_SIZE_INC;
            }
            description { state: "slide_end_landscape" 0.0;
               inherit: "slide_end" 0.0;
               text.size: NAVIFRAME_LANDSCAPE_TITLE_TAB_FONT_SIZE_INC;
            }
         }
         part { name: "title_text_slide_effect_left_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: NAVIFRAME_PADDING_INC;
               align: 1.0 0.5;
               fixed: 1 1;
               visible: 0;
               rel1 { relative: 0.0 0.0; to: "elm.text.title"; }
               rel2 { relative: 0.0 1.0; to: "elm.text.title"; }
            }
         }
         part { name: "title_text_slide_effect_left";
            type: IMAGE;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_SIZE_INC;
               align: 0.0 0.5;
               fixed: 1 1;
               visible: 0;
               rel1 { relative: 0.0 0.0; to: "title_text_slide_effect_left_bg"; }
               rel2 { relative: 0.0 1.0; to: "title_text_slide_effect_left_bg"; }
               image {
                  normal: "00_effect_title_text_dim_left.png";
                  border: NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_BORDER_INC;
                  border_scale: 1;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.text.full_title";
            type: TEXT;
            scale: 1;
            clip_to: "slide_title_text_clip";
            description { state: "default" 0.0;
               visible: 0;
               text { font: "Tizen:style=Bold";
                  size: NAVIFRAME_TITLE_TAB_FONT_SIZE_INC;
                  min: 1 0;
                  max: 1 0;
                  align: 0.0 0.5;
                  text_class: "tizen";
               }
               fixed: 1 0;
               align: 0.0 0.5;
               rel1.to: "title_text_bg";
               rel2.to: "title_text_bg";
            }
            description { state: "landscape" 0.0;
               inherit: "default" 0.0;
               text.size: NAVIFRAME_LANDSCAPE_TITLE_TAB_FONT_SIZE_INC;
            }
         }
         part { name: "slide_text_gap2";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 0;
               min: NAVIFRAME_TITLE_SLIDE_TEXT_GAP 0;
               max: NAVIFRAME_TITLE_SLIDE_TEXT_GAP -1;
               align: 0.0 0.5;
               rel1 { relative: 1.0 0.0; to: "elm.text.full_title"; }
               rel2 { relative: 1.0 1.0; to: "elm.text.full_title"; }
            }
         }
         part { name: "elm.text.slide_end_title";
            type: TEXT;
            effect: FAR_SHADOW BOTTOM;
            scale: 1;
            clip_to: "slide_title_text_clip";
            description { state: "default" 0.0;
               visible: 1;
               text { font: "Tizen:style=Bold";
                  size: NAVIFRAME_TITLE_TAB_FONT_SIZE_INC;
                  min: 1 0;
                  max: 1 0;
                  align: 0.0 0.5;
                  text_class: "tizen";
               }
               color: NAVIFRAME_TITLE_TEXT_COLOR_INC;
               color3: NAVIFRAME_TITLE_TEXT_SHADOW_COLOR_INC;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1.to: "title_text_bg";
               rel2.to: "title_text_bg";
            }
            description { state: "slide_begin" 0.0;
               inherit: "default" 0.0;
               rel1 { relative: 1.0 0.0; to: "slide_text_gap2"; }
               rel2 { relative: 1.0 1.0; to: "slide_text_gap2"; }
            }
            description { state: "slide_end" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "slide_begin_landscape" 0.0;
               inherit: "slide_begin" 0.0;
               text.size: NAVIFRAME_LANDSCAPE_TITLE_TAB_FONT_SIZE_INC;
            }
            description { state: "slide_end_landscape" 0.0;
               inherit: "slide_end" 0.0;
               text.size: NAVIFRAME_LANDSCAPE_TITLE_TAB_FONT_SIZE_INC;
            }
         }
         part { name: "title_text_slide_effect_right_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: NAVIFRAME_PADDING_INC;
               align: 0.0 0.5;
               fixed: 1 1;
               visible: 0;
               rel1 { relative: 1.0 0.0; to: "elm.text.title"; }
               rel2 { relative: 1.0 1.0; to: "elm.text.title"; }
            }
         }
         part { name: "title_text_slide_effect_right";
            type: IMAGE;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_SIZE_INC;
               align: 1.0 0.5;
               fixed: 1 1;
               visible: 0;
               rel1 { relative: 1.0 0.0; to: "title_text_slide_effect_right_bg"; }
               rel2 { relative: 1.0 1.0; to: "title_text_slide_effect_right_bg"; }
               image {
                  normal: "00_effect_title_text_dim_right.png";
                  border: NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_BORDER_INC;
                  border_scale: 1;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "click_event_area";
             type: RECT;
             ignore_flags: ON_HOLD;
             description { state: "default" 0.0;
                rel1 { to: "title_bg"; }
                rel2 { to: "title_bg"; }
                color: 0 0 0 0;
             }
         }
         part { name: "access.title";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1.to: "title_bg";
               rel2.to: "title_bg";
               color: 0 0 0 0;
            }
         }
         part { name: "tabbar";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 NAVIFRAME_TITLE_TAB_H_INC;
               max: -1 NAVIFRAME_TITLE_TAB_H_INC;
               fixed: 0 1;
               align: 0.5 1.0;
               rel1 { relative: 0.0 1.0; to: "title_bg"; }
               rel2 { relative: 1.0 1.0; to: "title_bg"; }
            }
         }
         part { name: "toolbar";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 999999 0;
               fixed: 0 1;
               align: 0.0 1.0;
               visible: 0;
               rel1 { to: "base"; }
               rel2 { to: "base"; }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: 0 NAVIFRAME_TOOLBAR_HEIGHT_INC;
               max: 999999 NAVIFRAME_TOOLBAR_HEIGHT_INC;
               visible: 1;
            }
            description { state: "visible_landscape" 0.0;
               inherit: "default" 0.0;
               min: 0 NAVIFRAME_LANDSCAPE_TOOLBAR_HEIGHT_INC;
               max: 999999 NAVIFRAME_LANDSCAPE_TOOLBAR_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "more_btn_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 0;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "toolbar"; }
               rel2 { relative: 0.0 1.0; to: "toolbar"; }
               visible: 0;
            }
         }
         part { name: "toolbar_more_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               rel1.to: "more_btn_bg";
               rel2.to: "more_btn_bg";
               visible: 0;
            }
            description { state: "landscape" 0.0;
               inherit: "default" 0.0;
               max: NAVIFRAME_LANDSCAPE_PREV_FUNC_BTN_SIZE_INC;
            }
         }
         part { name: "prev_btn_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 0;
               align: 1.0 0.0;
               rel1 { relative: 1.0 0.0; to: "toolbar"; }
               rel2.to: "toolbar";
               visible: 0;
            }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "prev_btn_bg";
               rel2.to: "prev_btn_bg";
               visible: 0;
            }
            description { state: "landscape" 0.0;
               inherit: "default" 0.0;
               max: NAVIFRAME_LANDSCAPE_PREV_FUNC_BTN_SIZE_INC;
            }
         }
         part { name: "toolbar_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1 { to: "toolbar"; }
               rel2 { to: "toolbar"; }
            }
         }
      }
      programs {
         program { name: "content_new_pushed";
            signal: "elm,state,new,pushed,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_pushed";
            signal: "elm,state,cur,pushed,deferred";
            source: "elm";
            action: STATE_SET "left" 0.0;
            target: "base";
            target: "clipper";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "pushed_finished";
         }
         program { name: "content_prev_popped";
            signal: "elm,state,prev,popped,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            target: "clipper";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_popped";
            signal: "elm,state,cur,popped,deferred";
            source: "elm";
            action: STATE_SET "right" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "popped_finished";
         }
         program { name: "cur_pushed";
            signal: "elm,state,cur,pushed";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            action: STATE_SET "right" 0.0;
            target: "base";
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            action: STATE_SET "left" 0.0;
            target: "base";
         }
         program { name: "cur_popped";
            signal: "elm,state,cur,popped";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
         }
         program { name: "visible";
            signal: "elm,state,visible";
            source: "elm";
            script {
               set_state(PART:"base", "default", 0.0);
               set_state(PART:"clipper", "default", 0.0);
               emit("elm,action,title,slide", "");
            }
         }
         program { name: "title_slide";
            signal: "elm,action,title,slide";
            source: "";
            script {
               if (get_int(title_slide_anim_id))
                 stop_slide(0);
               timer(1.5, "start_slide", 0);
            }
         }
         program { name: "title_show";
            signal: "elm,state,title,show";
            source: "elm";
            script {
               if (!get_int(landscape))
                 set_state(PART:"title_bg", "default", 0.0);
               else
                 set_state(PART:"title_bg", "landscape", 0.0);
            }
         }
         program { name: "title_hide";
            signal: "elm,state,title,hide";
            source: "elm";
            script {
               set_state(PART:"title_bg", "hide", 0.0);
            }
         }
         program { name: "toolbar_show";
            signal: "elm,state,toolbar,show";
            source: "elm";
            script {
               if (!get_int(landscape))
                 set_state(PART:"toolbar", "visible", 0.0);
               else
                 set_state(PART:"toolbar", "visible_landscape", 0.0);
               set_int(tbar_bg, get_int(tbar_bg) + 1);
            }
         }
         program { name: "toolbar_hide";
            signal: "elm,state,toolbar,hide";
            source: "elm";
            script {
               set_int(tbar_bg, get_int(tbar_bg) - 1);
               if (get_int(tbar_bg) <= 0)
                 set_state(PART:"toolbar", "default", 0.0);
            }
         }
         program { name: "toolbar_open_internal";
            signal: "elm,state,toolbar,open,internal";
            source: "elm";
            script {
               set_int(tbar_close, 0);
               if (!get_int(landscape))
                 set_state(PART:"toolbar", "visible", 0.0);
               else
                 set_state(PART:"toolbar", "visible_landscape", 0.0);
            }
         }
         program { name: "toolbar_close_internal";
            signal: "elm,state,toolbar,close,internal";
            source: "elm";
            script {
               set_int(tbar_close, 1);
               set_state(PART:"toolbar", "default", 0.0);
            }
         }
         program { name: "toolbar_open";
            signal: "elm,state,toolbar,open";
            source: "";
            script {
               if (!get_int(landscape))
                 set_state(PART:"toolbar", "visible", 0.0);
               else
                 set_state(PART:"toolbar", "visible_landscape", 0.0);
            }
            transition: LINEAR 0.2;
            after: "toolbar_open_internal";
         }
         program { name: "toolbar_close";
            signal: "elm,state,toolbar,close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "toolbar";
            transition: LINEAR 0.2;
            after: "toolbar_close_internal";
         }
         program { name: "toolbar_instant_open";
            signal: "elm,state,toolbar,instant_open";
            source: "";
            script {
               emit("elm,state,toolbar,open,internal", "elm");
            }
         }
         program { name: "toolbar_instant_close";
            signal: "elm,state,toolbar,instant_close";
            source: "";
            script {
               emit("elm,state,toolbar,close,internal", "elm");
            }
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            script {
               if (get_int(title_slide_anim_id))
                 stop_slide(0);
               emit("elm,action,pushed,finished", "");
            }
         }
         program { name: "popped_finished";
            script {
               if (get_int(title_slide_anim_id))
                 stop_slide(0);
               emit("elm,action,popped,finished", "");
            }
         }
         program {
            name: "title_clicked";
            signal: "mouse,clicked,1";
            source: "click_event_area";
            script {
               emit("elm,action,title,clicked", "");
            }
         }
         program {
            name: "change_to_landscape";
            signal: "elm,state,landscape";
            source: "elm";
            script {
               if (!get_int(landscape)) {
                  set_state(PART:"elm.text.title", "landscape", 0.0);
                  set_state(PART:"toolbar_more_btn", "landscape", 0.0);
                  set_state(PART:"elm.swallow.prev_btn", "landscape", 0.0);

                  new st[31];
                  new Float:vl;
                  get_state(PART:"title_bg", st, 30, vl);
                  if (!strcmp(st, "default"))
                    set_state(PART:"title_bg", "landscape", 0.0);

                  get_state(PART:"toolbar", st, 30, vl);
                  if (!strcmp(st, "visible"))
                    set_state(PART:"toolbar", "visible_landscape", 0.0);

                  set_int(landscape, 1);
               }
            }
         }
         program {
            name: "change_to_portrait";
            signal: "elm,state,portrait";
            source: "elm";
            script {
               if (get_int(landscape)) {
                  set_state(PART:"elm.text.title", "default", 0.0);
                  set_state(PART:"toolbar_more_btn", "default", 0.0);
                  set_state(PART:"elm.swallow.prev_btn", "default", 0.0);

                  new st[31];
                  new Float:vl;
                  get_state(PART:"title_bg", st, 30, vl);
                  if (!strcmp(st, "landscape"))
                    set_state(PART:"title_bg", "default", 0.0);

                  get_state(PART:"toolbar", st, 30, vl);
                  if (!strcmp(st, "visible_landscape"))
                    set_state(PART:"toolbar", "visible", 0.0);

                  set_int(landscape, 0);
               }
            }
         }
         program { name: "landscape_mode";
            source: "elm";
            signal: "elm,state,orient,90";
            action: SIGNAL_EMIT "elm,state,landscape" "elm";
         }
         program { name: "landscape_mode2";
            source: "elm";
            signal: "elm,state,orient,270";
            action: SIGNAL_EMIT "elm,state,landscape" "elm";
         }
         program { name: "portrait_mode";
            source: "elm";
            signal: "elm,state,orient,0";
            action: SIGNAL_EMIT "elm,state,portrait" "elm";
         }
         program { name: "portrait_mode2";
            source: "elm";
            signal: "elm,state,orient,180";
            action: SIGNAL_EMIT "elm,state,portrait" "elm";
         }
      }
   }

   group { name: "elm/naviframe/item/tabbar/notitle/default";
      script {
         public tbar_bg = 0;     //Toolbar BG Show call count
         public tbar_close = 0; //Toolbar lastest Open/Close status
         public landscape = 0; //Landscape mode status
      }
      parts {
         part { name: "clipper";
            type: RECT;
            description { state: "default" 0.0;
               visible: 1;
            }
            description { state: "left" 0.0;
               visible: 0;
            }
         }
         part { name: "base";
            type: RECT;
            mouse_events:  0;
            description { state: "default" 0.0;
               visible: 0;
            }
            description { state: "left" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -1.0 0.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "right" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 1.0 0.0;
               rel2.relative: 2.0 1.0;
            }
         }
         part { name: "title_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 NAVIFRAME_TAB_TITLE_H2_INC;
               max: -1 NAVIFRAME_TAB_TITLE_H2_INC;
               align: 0.0 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; to: "base"; }
               rel2 { relative: 1.0 0.0; to: "base"; }
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "title_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1 { to_y: "title_bg"; }
               rel2 { to_y: "title_bg"; }
            }
         }
         part { name: "tabbar";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: -1 NAVIFRAME_TAB_TITLE_H2_INC;
               rel1 { relative: 0.0 0.0; to: "title_bg"; }
               rel2 { relative: 1.0 1.0; to: "title_bg"; }
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "content_clip";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 1.0;
               rel1.to_x: "base";
               rel1.to_y: "title_bg";
               rel2.relative: 1.0 0.0;
               rel2.to_x: "base";
               rel2.to_y: "toolbar";
            }
         }
         part { name: "content_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1.to_y: "elm.swallow.content";
               rel2.to_y: "elm.swallow.content";
            }
         }
         part { name: "toolbar";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 999999 0;
               fixed: 0 1;
               align: 0.0 1.0;
               visible: 0;
               rel1 { to: "base"; }
               rel2 { to: "base"; }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: 0 NAVIFRAME_TOOLBAR_HEIGHT_INC;
               max: 999999 NAVIFRAME_TOOLBAR_HEIGHT_INC;
               visible: 1;
            }
            description { state: "visible_landscape" 0.0;
               inherit: "default" 0.0;
               min: 0 NAVIFRAME_LANDSCAPE_TOOLBAR_HEIGHT_INC;
               max: 999999 NAVIFRAME_LANDSCAPE_TOOLBAR_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "more_btn_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 0;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "toolbar"; }
               rel2 { relative: 0.0 1.0; to: "toolbar"; }
               visible: 0;
            }
         }
         part { name: "toolbar_more_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               rel1.to: "more_btn_bg";
               rel2.to: "more_btn_bg";
               visible: 0;
            }
            description { state: "landscape" 0.0;
               inherit: "default" 0.0;
               max: NAVIFRAME_LANDSCAPE_PREV_FUNC_BTN_SIZE_INC;
            }
         }
         part { name: "prev_btn_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 0;
               align: 1.0 0.0;
               rel1 { relative: 1.0 0.0; to: "toolbar"; }
               rel2.to: "toolbar";
               visible: 0;
            }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "prev_btn_bg";
               rel2.to: "prev_btn_bg";
               visible: 0;
            }
            description { state: "landscape" 0.0;
               inherit: "default" 0.0;
               max: NAVIFRAME_LANDSCAPE_PREV_FUNC_BTN_SIZE_INC;
            }
         }
         part { name: "toolbar_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1 { to: "toolbar"; }
               rel2 { to: "toolbar"; }
            }
         }
      }
      programs {
         program { name: "content_new_pushed";
            signal: "elm,state,new,pushed,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_pushed";
            signal: "elm,state,cur,pushed,deferred";
            source: "elm";
            action: STATE_SET "left" 0.0;
            target: "base";
            target: "clipper";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "pushed_finished";
         }
         program { name: "content_prev_popped";
            signal: "elm,state,prev,popped,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            target: "clipper";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_popped";
            signal: "elm,state,cur,popped,deferred";
            source: "elm";
            action: STATE_SET "right" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "popped_finished";
         }
         program { name: "cur_pushed";
            signal: "elm,state,cur,pushed";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            action: STATE_SET "right" 0.0;
            target: "base";
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            action: STATE_SET "left" 0.0;
            target: "base";
         }
         program { name: "cur_popped";
            signal: "elm,state,cur,popped";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
         }
         program { name: "visible";
            signal: "elm,state,visible";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            target: "clipper";
         }
         program { name: "title_show";
            signal: "elm,state,title,show";
            source: "elm";
            script {
               set_state(PART:"title_bg", "default", 0.0);
            }
         }
         program { name: "title_hide";
            signal: "elm,state,title,hide";
            source: "elm";
            script {
               set_state(PART:"title_bg", "hide", 0.0);
            }
         }
         program { name: "toolbar_show";
            signal: "elm,state,toolbar,show";
            source: "elm";
            script {
               if (!get_int(landscape))
                 set_state(PART:"toolbar", "visible", 0.0);
               else
                 set_state(PART:"toolbar", "visible_landscape", 0.0);
               set_int(tbar_bg, get_int(tbar_bg) + 1);
            }
         }
         program { name: "toolbar_hide";
            signal: "elm,state,toolbar,hide";
            source: "elm";
            script {
               set_int(tbar_bg, get_int(tbar_bg) - 1);
               if (get_int(tbar_bg) <= 0)
                 set_state(PART:"toolbar", "default", 0.0);
            }
         }
         program { name: "toolbar_open_internal";
            signal: "elm,state,toolbar,open,internal";
            source: "elm";
            script {
               set_int(tbar_close, 0);
               if (!get_int(landscape))
                 set_state(PART:"toolbar", "visible", 0.0);
               else
                 set_state(PART:"toolbar", "visible_landscape", 0.0);
            }
         }
         program { name: "toolbar_close_internal";
            signal: "elm,state,toolbar,close,internal";
            source: "elm";
            script {
               set_int(tbar_close, 1);
               set_state(PART:"toolbar", "default", 0.0);
            }
         }
         program { name: "toolbar_open";
            signal: "elm,state,toolbar,open";
            source: "";
            script {
               if (!get_int(landscape))
                 set_state(PART:"toolbar", "visible", 0.0);
               else
                 set_state(PART:"toolbar", "visible_landscape", 0.0);
            }
            transition: LINEAR 0.2;
            after: "toolbar_open_internal";
         }
         program { name: "toolbar_close";
            signal: "elm,state,toolbar,close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "toolbar";
            transition: LINEAR 0.2;
            after: "toolbar_close_internal";
         }
         program { name: "toolbar_instant_open";
            signal: "elm,state,toolbar,instant_open";
            source: "";
            script {
               emit("elm,state,toolbar,open,internal", "elm");
            }
         }
         program { name: "toolbar_instant_close";
            signal: "elm,state,toolbar,instant_close";
            source: "";
            script {
               emit("elm,state,toolbar,close,internal", "elm");
            }
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
         program {
            name: "change_to_landscape";
            signal: "elm,state,landscape";
            source: "elm";
            script {
               if (!get_int(landscape)) {
                  set_state(PART:"toolbar_more_btn", "landscape", 0.0);
                  set_state(PART:"elm.swallow.prev_btn", "landscape", 0.0);

                  new st[31];
                  new Float:vl;
                  get_state(PART:"toolbar", st, 30, vl);
                  if (!strcmp(st, "visible"))
                    set_state(PART:"toolbar", "visible_landscape", 0.0);

                  set_int(landscape, 1);
               }
            }
         }
         program {
            name: "change_to_portrait";
            signal: "elm,state,portrait";
            source: "elm";
            script {
               if (get_int(landscape)) {
                  set_state(PART:"toolbar_more_btn", "default", 0.0);
                  set_state(PART:"elm.swallow.prev_btn", "default", 0.0);

                  new st[31];
                  new Float:vl;
                  get_state(PART:"toolbar", st, 30, vl);
                  if (!strcmp(st, "visible_landscape"))
                    set_state(PART:"toolbar", "visible", 0.0);

                  set_int(landscape, 0);
               }
            }
         }
         program { name: "landscape_mode";
            source: "elm";
            signal: "elm,state,orient,90";
            action: SIGNAL_EMIT "elm,state,landscape" "elm";
         }
         program { name: "landscape_mode2";
            source: "elm";
            signal: "elm,state,orient,270";
            action: SIGNAL_EMIT "elm,state,landscape" "elm";
         }
         program { name: "portrait_mode";
            source: "elm";
            signal: "elm,state,orient,0";
            action: SIGNAL_EMIT "elm,state,portrait" "elm";
         }
         program { name: "portrait_mode2";
            source: "elm";
            signal: "elm,state,orient,180";
            action: SIGNAL_EMIT "elm,state,portrait" "elm";
         }
      }
   }

   group { name: "elm/naviframe/item/empty/default";
      script {
         public tbar_bg = 0;     //Toolbar BG Show call count
         public tbar_close = 0; //Toolbar lastest Open/Close status
         public landscape = 0; //Landscape mode status
      }
      parts {
         part { name: "clipper";
            type: RECT;
            description { state: "default" 0.0;
               visible: 1;
            }
            description { state: "left" 0.0;
               visible: 0;
            }
         }
         part { name: "base";
            type: RECT;
            mouse_events:  0;
            description { state: "default" 0.0;
               visible: 0;
            }
            description { state: "left" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -1.0 0.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "right" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 1.0 0.0;
               rel2.relative: 2.0 1.0;
            }
         }
         part { name: "title_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               rel1 { to: "title"; }
               rel2 { to: "title"; }
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "content_clip";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 1.0;
               rel1.to_x: "base";
               rel1.to_y: "title_bg";
               rel2.relative: 1.0 0.0;
               rel2.to_x: "base";
               rel2.to_y: "toolbar";
            }
         }
         part { name: "content_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1.to: "elm.swallow.content";
               rel2.to: "elm.swallow.content";
            }
         }
         part { name: "title";
            type: SWALLOW;
            scale: 1;
            clip_to: "clipper";
            description { state: "default" 0.0;
               align: 0.5 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; to: "base"; }
               rel2 { relative: 1.0 0.0; to: "base"; }
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "toolbar";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 999999 0;
               fixed: 0 1;
               align: 0.0 1.0;
               visible: 0;
               rel1 { to: "base"; }
               rel2 { to: "base"; }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: 0 NAVIFRAME_TOOLBAR_HEIGHT_INC;
               max: 999999 NAVIFRAME_TOOLBAR_HEIGHT_INC;
               visible: 1;
            }
            description { state: "visible_landscape" 0.0;
               inherit: "default" 0.0;
               min: 0 NAVIFRAME_LANDSCAPE_TOOLBAR_HEIGHT_INC;
               max: 999999 NAVIFRAME_LANDSCAPE_TOOLBAR_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "more_btn_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 0;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "toolbar"; }
               rel2 { relative: 0.0 1.0; to: "toolbar"; }
               visible: 0;
            }
         }
         part { name: "toolbar_more_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               rel1.to: "more_btn_bg";
               rel2.to: "more_btn_bg";
               visible: 0;
            }
            description { state: "landscape" 0.0;
               inherit: "default" 0.0;
               max: NAVIFRAME_LANDSCAPE_PREV_FUNC_BTN_SIZE_INC;
            }
         }
         part { name: "prev_btn_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 0;
               align: 1.0 0.0;
               rel1 { relative: 1.0 0.0; to: "toolbar"; }
               rel2.to: "toolbar";
               visible: 0;
            }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "prev_btn_bg";
               rel2.to: "prev_btn_bg";
               visible: 0;
            }
            description { state: "landscape" 0.0;
               inherit: "default" 0.0;
               max: NAVIFRAME_LANDSCAPE_PREV_FUNC_BTN_SIZE_INC;
            }
         }
         part { name: "toolbar_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1 { to: "toolbar"; }
               rel2 { to: "toolbar"; }
            }
         }
      }
      programs {
         program { name: "content_new_pushed";
            signal: "elm,state,new,pushed,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_pushed";
            signal: "elm,state,cur,pushed,deferred";
            source: "elm";
            action: STATE_SET "left" 0.0;
            target: "base";
            target: "clipper";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "pushed_finished";
         }
         program { name: "content_prev_popped";
            signal: "elm,state,prev,popped,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            target: "clipper";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_popped";
            signal: "elm,state,cur,popped,deferred";
            source: "elm";
            action: STATE_SET "right" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "popped_finished";
         }
         program { name: "cur_pushed";
            signal: "elm,state,cur,pushed";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            action: STATE_SET "right" 0.0;
            target: "base";
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            action: STATE_SET "left" 0.0;
            target: "base";
         }
         program { name: "cur_popped";
            signal: "elm,state,cur,popped";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
         }
         program { name: "visible";
            signal: "elm,state,visible";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            target: "clipper";
         }
         program { name: "title_show";
            signal: "elm,state,title,show";
            source: "elm";
            script {
               set_state(PART:"title_bg", "default", 0.0);
               set_state(PART:"title", "default", 0.0);
            }
         }
         program { name: "title_hide";
            signal: "elm,state,title,hide";
            source: "elm";
            script {
               set_state(PART:"title_bg", "hide", 0.0);
               set_state(PART:"title", "hide", 0.0);
            }
         }
         program { name: "toolbar_show";
            signal: "elm,state,toolbar,show";
            source: "elm";
            script {
               if (!get_int(landscape))
                 set_state(PART:"toolbar", "visible", 0.0);
               else
                 set_state(PART:"toolbar", "visible_landscape", 0.0);
               set_int(tbar_bg, get_int(tbar_bg) + 1);
            }
         }
         program { name: "toolbar_hide";
            signal: "elm,state,toolbar,hide";
            source: "elm";
            script {
               set_int(tbar_bg, get_int(tbar_bg) - 1);
               if (get_int(tbar_bg) <= 0)
                 set_state(PART:"toolbar", "default", 0.0);
            }
         }
         program { name: "toolbar_open_internal";
            signal: "elm,state,toolbar,open,internal";
            source: "elm";
            script {
               set_int(tbar_close, 0);
               if (!get_int(landscape))
                 set_state(PART:"toolbar", "visible", 0.0);
               else
                 set_state(PART:"toolbar", "visible_landscape", 0.0);
            }
         }
         program { name: "toolbar_close_internal";
            signal: "elm,state,toolbar,close,internal";
            source: "elm";
            script {
               set_int(tbar_close, 1);
               set_state(PART:"toolbar", "default", 0.0);
            }
         }
         program { name: "toolbar_open";
            signal: "elm,state,toolbar,open";
            source: "";
            script {
               if (!get_int(landscape))
                 set_state(PART:"toolbar", "visible", 0.0);
               else
                 set_state(PART:"toolbar", "visible_landscape", 0.0);
            }
            transition: LINEAR 0.2;
            after: "toolbar_open_internal";
         }
         program { name: "toolbar_close";
            signal: "elm,state,toolbar,close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "toolbar";
            transition: LINEAR 0.2;
            after: "toolbar_close_internal";
         }
         program { name: "toolbar_instant_open";
            signal: "elm,state,toolbar,instant_open";
            source: "";
            script {
               emit("elm,state,toolbar,open,internal", "elm");
            }
         }
         program { name: "toolbar_instant_close";
            signal: "elm,state,toolbar,instant_close";
            source: "";
            script {
               emit("elm,state,toolbar,close,internal", "elm");
            }
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
         program {
            name: "change_to_landscape";
            signal: "elm,state,landscape";
            source: "elm";
            script {
               if (!get_int(landscape)) {
                  set_state(PART:"toolbar_more_btn", "landscape", 0.0);
                  set_state(PART:"elm.swallow.prev_btn", "landscape", 0.0);

                  new st[31];
                  new Float:vl;
                  get_state(PART:"toolbar", st, 30, vl);
                  if (!strcmp(st, "visible"))
                    set_state(PART:"toolbar", "visible_landscape", 0.0);

                  set_int(landscape, 1);
               }
            }
         }
         program {
            name: "change_to_portrait";
            signal: "elm,state,portrait";
            source: "elm";
            script {
               if (get_int(landscape)) {
                  set_state(PART:"toolbar_more_btn", "default", 0.0);
                  set_state(PART:"elm.swallow.prev_btn", "default", 0.0);

                  new st[31];
                  new Float:vl;
                  get_state(PART:"toolbar", st, 30, vl);
                  if (!strcmp(st, "visible_landscape"))
                    set_state(PART:"toolbar", "visible", 0.0);

                  set_int(landscape, 0);
               }
            }
         }
         program { name: "landscape_mode";
            source: "elm";
            signal: "elm,state,orient,90";
            action: SIGNAL_EMIT "elm,state,landscape" "elm";
         }
         program { name: "landscape_mode2";
            source: "elm";
            signal: "elm,state,orient,270";
            action: SIGNAL_EMIT "elm,state,landscape" "elm";
         }
         program { name: "portrait_mode";
            source: "elm";
            signal: "elm,state,orient,0";
            action: SIGNAL_EMIT "elm,state,portrait" "elm";
         }
         program { name: "portrait_mode2";
            source: "elm";
            signal: "elm,state,orient,180";
            action: SIGNAL_EMIT "elm,state,portrait" "elm";
         }
      }
   }

   group { name: "elm/naviframe/item/basic/uglib";
      parts {
         part { name: "base";
            type: RECT;
            mouse_events:  0;
            description { state: "default" 0.0;
               color: 255 255 255 255;
            }
            description { state: "right" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 1.0 0.0;
               rel2.relative: 2.0 1.0;
               color: 255 255 255 0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "base";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 0.0;
               rel1.to: "base";
               rel2.relative: 1.0 1.0;
               rel2.to: "base";
            }
         }
      }
      programs {
         program { name: "content_new_pushed";
            signal: "elm,state,new,pushed,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_pushed";
            signal: "elm,state,cur,pushed,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "pushed_finished";
         }
         program { name: "content_prev_popped";
            signal: "elm,state,prev,popped,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_popped";
            signal: "elm,state,cur,popped,deferred";
            source: "elm";
            action: STATE_SET "right" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_TRANS_TIME;
            after: "popped_finished";
         }
         program { name: "cur_pushed";
            signal: "elm,state,cur,pushed";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            action: STATE_SET "right" 0.0;
            target: "base";
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
         }
         program { name: "cur_popped";
            signal: "elm,state,cur,popped";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
         }
         program { name: "visible";
            signal: "elm,state,visible";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
      }
   }

