group { name: "elm/menu/item/default";
   parts {
      part { name: "base";
         type: RECT;
         description { state: "default" 0.0;
            min: 0 22;
            max: -1 22;
            color: 0 0 0 0;
         }
      }
      part { name: "highlight";
         type: RECT;
         description { state: "default" 0.0;
            rel1 {
               offset: 1 1;
               to: "base";
            }
            rel2 {
               offset: -2 -2;
               to: "base";
            }
         }
         description { state: "over" 0.0;
            inherit: "default" 0.00;
            color_class: "over";
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.00;
            color_class: "text_tabs_selected";
         }
      }
      part { name: "area.content";
         type: SPACER;
         description { state: "default" 0.0;
            align: 0.0 0.5;
            min: 10 0;
            max: 10 -1;
            rel1.to: "base";
            rel2.to: "base";
         }
         description { state: "noicon" 0.0;
            inherit: "default" 0.00;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         clip_to: "clipper.content";
         description { state: "default" 0.0;
            visible: 0;
            fixed: 1 1;
            max: 16 16;
            rel1.to: "area.content";
            rel2.to: "area.content";
         }
         description { state: "noicon" 0.0;
            inherit: "default" 0.00;
            visible: 0;
            max: 0 0;
         }
      }
      part { name: "padding.right";
         type: SPACER;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            fixed: 1 0;
            min: 8 0;
            max: 8 -1;
            rel1 {
               relative: 1.0 0.0;
               to: "base";
            }
            rel2.to: "base";
         }
      }
      part { name: "elm.text";
         type: TEXT;
         clip_to: "clipper.text";
         description { state: "default" 0.0;
            text {
               font: FN;
               size: 12;
               min: 1 1;
               align: 0.0 0.5;
               ellipsis: -1.0;
            }
            rel1 {
               relative: 1.0 0.0;
               to_x: "area.content";
               to_y: "base";
            }
            rel2 {
               relative: 0.0 1.0;
               to_x: "padding.text";
               to_y: "base";
            }
         }
      }
      part { name: "padding.text";
         type: SPACER;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            fixed: 1 0;
            min: 16 0;
            max: 16 -1;
            rel1 {
               relative: 1.0 0.0;
               to: "base";
            }
            rel2 {
               relative: 0.0 1.0;
               to_x: "elm.shortcut";
               to_y: "base";
            }
         }
      }
      part { name: "elm.shortcut";
         type: TEXT;
         clip_to: "clipper.shortcut";
         description { state: "default" 0.0;
            visible: 0;
            align: 1.0 0.5;
            fixed: 1 0;
            text {
               font: FN;
               size: 12;
               min: 1 1;
               align: 0.0 0.5;
            }
            rel1 {
               to_x: "padding.right";
               to_y: "base";
            }
            rel2 {
               to_x: "padding.right";
               to_y: "base";
            }
         }
      }
      part { name: "clipper.content";
         type: RECT;
         description { state: "default" 0.0;
            color_class: "genlist_text_tree";
            rel1.to: "area.content";
            rel2.to: "area.content";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.00;
            color_class: "main_disabled";
         }
      }
      part { name: "clipper.text";
         type: RECT;
         description { state: "default" 0.0;
            color_class: "genlist_text_tree";
            rel1 {
               relative: 1.0 0.0;
               to_x: "area.content";
               to_y: "base";
            }
            rel2 {
               to_x: "padding.text";
               to_y: "base";
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.00;
            color_class: "main_disabled";
            rel2.to_x: "base";
         }
      }
      part { name: "clipper.shortcut";
         type: RECT;
         description { state: "default" 0.0;
            color_class: "main_alternative";
            rel1 {
               to_x: "elm.shortcut";
               to_y: "base";
            }
            rel2.to: "base";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.00;
            color_class: "main_disabled";
         }
      }
      part { name: "event";
         type: RECT;
         ignore_flags: "ON_HOLD";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.to: "base";
            rel2.to: "base";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.00;
            visible: 0;
         }
      }
   }
   programs {
      program { name: "highlighted";
         signal: "mouse,in";
         source: "event";
         action: STATE_SET "over" 0.00;
         target: "highlight";
         after: "activate";
      }
      program { name: "unhighlighted";
         signal: "mouse,out";
         source: "event";
         action: STATE_SET "default" 0.00;
         target: "highlight";
         target: "clipper.content";
      }
      program { name: "disabled";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.00;
         target: "clipper.content";
         target: "clipper.text";
         target: "clipper.shortcut";
         target: "event";
      }
      program { name: "enabled";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.00;
         target: "clipper.content";
         target: "clipper.text";
         target: "clipper.shortcut";
         target: "event";
      }
      program { name: "clicked";
         signal: "mouse,down,1";
         source: "event";
         action: STATE_SET "selected" 0.00;
         target: "highlight";
         after: "select";
      }
      program { name: "open";
         signal: "mouse,in";
         source: "event";
         action: SIGNAL_EMIT "elm,action,open" "elm";
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         action: STATE_SET "default" 0.00;
         target: "elm.swallow.content";
         target: "area.content";
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         action: STATE_SET "noicon" 0.00;
         target: "elm.swallow.content";
         target: "area.content";
      }
      program { name: "select";
         in: 0.1 0;
         action: SIGNAL_EMIT "elm,action,click" "elm";
         after: "inactivate";
      }
      program { name: "inactivate";
         action: SIGNAL_EMIT "elm,action,inactivate" "elm";
      }
      program { name: "activate";
         action: SIGNAL_EMIT "elm,action,activate" "elm";
      }
   }
}

group { name: "elm/menu/item_with_submenu/default";
   images {
      image: "Custom/context_menu-arrow.png" COMP;
   }
   parts {
      part { name: "base";
         type: SPACER;
         description { state: "default" 0.0;
            min: 0 21;
            max: -1 21;
        }
      }
      part { name: "highlight";
         type: RECT;
         description { state: "default" 0.0;
            visible: 1;
            rel1.to: "base";
            rel1.offset: 1 1;
            rel2.to: "base";
            rel2.offset: -2 -2;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color_class: "text_tabs_selected";
         }
         description { state: "over" 0.0;
            inherit: "default" 0.0;
            color_class: "over";
         }
      }
      part { name: "area.content";
         type: SPACER;
         description { state: "default" 0.0;
            align: 0.0 0.5;
            min: 10 0;
            max: 10 -1;
            rel1 {
               to: "base";
            }
            rel2 {
               to: "base";
            }
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         clip_to: "clipper.content";
         description { state: "default" 0.0;
            fixed: 1 1;
            max: 16 16;
            visible: 0;
            rel1 {
               to: "area.content";
            }
            rel2 {
               to: "area.content";
            }
         }
         description { state: "noicon" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "padding.right";
         type: SPACER;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            min: 8 0;
            max: 8 -1;
            rel1 {
               to: "base";
            }
            rel2 {
               to: "base";
            }
         }
      }
      part { name: "elm.text";
         type: TEXT;
         clip_to: "clipper.text";
         description { state: "default" 0.0;
            rel1 {
               relative: 1.0 0.0;
               to_x: "area.content";
               to_y: "base";
            }
            rel2 {
               relative: 0.0 1.0;
               to_x: "padding.text";
               to_y: "base";
            }
            text {
               font: FN;
               size: 12;
               align: 0.0 0.5;
               min: 1 1;
               ellipsis: -1;
            }
         }
      }
      part { name: "arrow";
         type: IMAGE;
         clip_to: "clipper.text";
         description { state: "default" 0.0;
            align: 1.0 0.5;
            min: 4 4;
            max: 4 6;
            rel1 {
               to: "base";
            }
            rel2 {
               relative: 0.0 1.0;
               to_x: "padding.right";
               to_y: "base";
            }
            image {
               normal: "Custom/context_menu-arrow.png";
               middle: DEFAULT;
            }
         }
      }
      part { name: "padding.text";
         type: SPACER;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            min: 16 0;
            max: 16 -1;
            rel1 {
               to: "base";
            }
            rel2 {
               relative: 0.0 1.0;
               to_x: "arrow";
               to_y: "base";
            }
         }
      }
      part { name: "clipper.content";
         type: RECT;
         description { state: "default" 0.0;
            color_class: "main";
            rel1 {
               to: "area.content";
            }
            rel2 {
               to: "area.content";
            }
         }
         description { state: "disabled" 0.0;
            color_class: "main_disabled";
            rel1 {
               to: "area.content";
            }
            rel2 {
               to: "area.content";
            }
         }
      }
      part { name: "clipper.text";
         type: RECT;
         description { state: "default" 0.0;
            color_class: "genlist_text_tree";
            rel1 {
               relative: 1.0 0.0;
               to_x: "area.content";
               to_y: "base";
            }
            rel2 {
               to: "base";
            }
         }
         description { state: "disabled" 0.0;
            color_class: "main_disabled";
            rel1 {
               relative: 1.0 0.0;
               to_x: "area.content";
               to_y: "base";
            }
            rel2 {
               to: "base";
            }
         }
      }
      part { name: "event";
         type: RECT;
         ignore_flags: "ON_HOLD";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1 {
               to: "base";
            }
            rel2 {
               to: "base";
            }
         }
         description { state: "disabled" 0.0;
            visible: 0;
            color: 0 0 0 0;
            rel1 {
               to: "base";
            }
            rel2 {
               to: "base";
            }
         }
      }
   }
   programs {
      program { name: "highlighted";
         signal: "mouse,in";
         source: "event";
         action: STATE_SET "over" 0.00;
         target: "highlight";
         after: "activate";
      }
      program { name: "unhighlighted";
         signal: "mouse,out";
         source: "event";
         action: STATE_SET "default" 0.00;
         target: "highlight";
         target: "clipper.content";
      }
      program { name: "disabled";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.00;
         target: "clipper.content";
         target: "clipper.text";
         target: "event";
      }
      program { name: "enabled";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.00;
         target: "clipper.content";
         target: "clipper.text";
         target: "event";
      }
      program { name: "clicked";
         signal: "mouse,up,1";
         source: "event";
         action: SIGNAL_EMIT "elm,action,click" "elm";
         after: "inactivate";
      }
      program { name: "clicked_down";
         signal: "mouse,down,1";
         source: "event";
         action: STATE_SET "selected" 0.0;
         target: "highlight";
      }
      program { name: "unclicked";
         signal: "mouse,up,1";
         source: "event";
         action: STATE_SET "over" 0.0;
         target: "highlight";
      }
        program { name: "inactivate";
        action: SIGNAL_EMIT "elm,action,inactivate" "elm";
      }
      program { name: "activate";
        action: SIGNAL_EMIT "elm,action,activate" "elm";
      }
      program { name: "open";
         signal: "mouse,in";
         source: "event";
         action: SIGNAL_EMIT "elm,action,open" "elm";
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.content";
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         action: STATE_SET "noicon" 0.0;
         target: "elm.swallow.content";
      }
   }
}

group { name: "elm/menu/separator/default";
   parts {
      part { name: "separator";
         type: RECT;
         description { state: "default" 0.0;
            min: 0 1;
            max: -1 1;
            rel1.offset: 1 0;
            rel2.offset: -2 0;
            color_class: "border";
         }
      }
   }
}

group { name: "elm/menu/main_menu_submenu/default";
   parts {
      part { name: "base";
         type: SPACER;
         description { state: "default" 0.0;
            min: 0 19;
            max: -1 19;
            rel1.offset: 1 1;
            rel2.offset: -2 -2;
         }
      }
      part { name: "bg";
         type: RECT;
         description { state: "default" 0.0;
            visible: 0;
            rel1.to: "base";
            rel2.to: "base";
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.00;
            visible: 1;
            color_class: "genlist_selected";
         }
      }
      part { name: "area.content";
         type: SPACER;
         description { state: "default" 0.0;
            align: 0.0 0.5;
            min: 22 0;
            max: 22 -1;
            rel1.to: "base";
            rel2.to: "base";
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
            min: 16 16;
            max: 16 16;
            rel1.to: "area.content";
            rel2.to: "area.content";
         }
      }
      part { name: "elm.text";
         type: TEXT;
         description { state: "default" 0.0;
            align: 0.0 0.5;
            color: 0 0 0 255;
            text {
               font: FN;
               size: 13;
               min: 1 1;
               max: 1 0;
               ellipsis: -1.0;
            }
            rel1 {
               relative: 1.0 0.0;
               to_x: "area.content";
               to_y: "base";
            }
            rel2.to: "base";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.00;
            color_class: "text_tabs_default";
            color: 255 255 255 255;
         }
      }
      part { name: "padding.end";
         type: SPACER;
         description { state: "default" 0.0;
            align: 0.0 0.5;
            min: 21 0;
            max: 21 -1;
            rel1 {
               relative: 1.0 0.0;
               to_x: "elm.text";
               to_y: "base";
            }
            rel2.to: "base";
         }
      }
      part { name: "event";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.to: "base";
            rel2.to: "base";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.00;
            visible: 0;
         }
      }
   }
   programs {
      program { name: "clicked";
         signal: "mouse,down,1";
         source: "event";
         action: STATE_SET "clicked" 0.00;
         target: "bg";
      }
      program { name: "unclicked";
         signal: "mouse,up,1";
         source: "event";
         action: STATE_SET "default" 0.00;
         target: "bg";
      }
      program { name: "clicked_event";
         signal: "mouse,up,1";
         source: "event";
         action: SIGNAL_EMIT "elm,action,click" "elm";
      }
      program { name: "disabled";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.00;
         target: "elm.text";
         target: "event";
      }
      program { name: "enabled";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.00;
         target: "elm.text";
         target: "event";
      }
   }
}

//-------------------------hover----------------------------------------------//
//In the hover used by the menu only the bottom part is used.
group { name: "elm/hover/base/main_menu/default";
   parts {
      part { name: "elm.swallow.offset";
         type: SWALLOW;
         description { state: "default" 0.0;
            visible: 0;
            fixed: 1 1;
         }
      }
      part { name: "elm.swallow.size";
         type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            fixed: 1 1;
            rel1.offset: 0 0;
            rel2.relative: 0.0 0.0;
         }
      }
      part { name: "bottomclip";
         type: RECT;
         description { state: "default" 0.0;
            //rel1.offset: -1 -2;
         }
      }
      part { name: "bevel";
         mouse_events: 0;
         type: RECT;
         description { state: "default" 0.0;
            color_class: "genlist_bg";
            rel1.to_y: "bottom";
            rel2.to_y: "bottom";
         }
      }
      part { name: "bottom";
         type: RECT;
         clip_to: "bottomclip";
         description { state: "default" 0.0;
            visible: 0;
            rel1 {
               to: "elm.swallow.slot.bottom";
               offset: 0 0;
            }
            rel2 {
               to: "elm.swallow.slot.bottom";
               offset: -1 -1;
            }
         }
      }
      part { name: "elm.swallow.slot.bottom";
         type: SWALLOW;
         clip_to: "bottomclip";
         description { state: "default" 0.0;
            align: 0.5 0.0;
            fixed: 0 1;
            rel1 {
               to: "elm.swallow.size";
               relative: 0.0 1.0;
            }
            rel2.to: "elm.swallow.size";
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
         }
      }
   }
   programs {
      program { name: "bottomshow";
         signal: "elm,action,slot,bottom,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         transition: ACCELERATE 0.3;
         target: "elm.swallow.slot.bottom";
      }
   }
}

group { name: "elm/hover/base/main_menu_submenu/default";
   alias: "elm/hover/base/menu/default";
   images {
      image: "bg_tip_popup.png" COMP;
      image: "POP UP/popup_shadow.png" COMP;
   }
   parts {
      part { name: "shadow";
         insert_before: "bg0";
          type: IMAGE;
          description { state: "default" 0.0;
             image {
                normal: "POP UP/popup_shadow.png";
                border: 20 20 20 20;
             }
             rel1 {
                offset: -7 -7;
                to: "bg0";
             }
             rel2 {
                offset: 9 9;
                to: "bg0";
             }
          }
       }
      part { name: "base";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "elm.swallow.offset";
         type: SWALLOW;
         repeat_events: 1;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            fixed: 1 1;
            rel2.relative: 0.0 0.0;
         }
      }
      part { name: "elm.swallow.size";
         type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            fixed: 1 1;
            rel1 {
               to: "elm.swallow.offset";
               relative: 1.0 1.0;
            }
            rel2.to: "elm.swallow.offset";
         }
      }
      part { name: "bottomclip";
         type: RECT;
         description { state: "default" 0.0;
         }
      }
      part { name: "bg0";
         type: RECT; mouse_events: 1;
         clip_to: "bottomclip";
         description { state: "default" 0.0;
            color_class: "text_tabs_selected";
            rel1 {
               to: "elm.swallow.slot.bottom";
            }
            rel2.to: "elm.swallow.slot.bottom";
         }
      }
      part { name: "bg1";
         type: RECT; mouse_events: 1;
         clip_to: "bottomclip";
         description { state: "default" 0.0;
            rel1 {
               to: "bg0";
               offset: 1 1;
            }
            rel2 {
               to: "bg0";
               offset: -2 -2;
            }
         }
      }
      part { name: "elm.swallow.slot.bottom";
         type: SWALLOW;
         clip_to: "bottomclip";
         description { state: "default" 0.0;
            align: 0.5 0.0;
            fixed: 0 1;
            rel1 {
               to: "elm.swallow.slot.middle";
               relative: 0.0 1.0;
            }
            rel2 {
               to: "elm.swallow.slot.middle";
               relative: 1.0 1.0;
            }
         }
      }
      part { name: "pop";
         type: RECT;
         mouse_events: 1;
         repeat_events:1;
         description { state: "default" 0.0;
            visible: 1;
            color: 0 255 255 255;
            fixed: 0 1;
            rel1 {
               to: "elm.swallow.slot.middle";
               relative: 0.0 1.0;
            }
            rel2 {
               to: "elm.swallow.slot.middle";
            }
         }
      }
      part { name: "elm.swallow.slot.middle";
         type: SWALLOW;
         repeat_events:1;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.size";
            rel2.to: "elm.swallow.size";
         }
      }
   }
   programs {
      program { name: "end";
         signal: "mouse,up,1";
         source: "base";
         action: SIGNAL_EMIT "elm,action,dismiss" "elm";
      }
   }
}

//In the hover used by the submenu only the bottom part is used
//and no part should interact except the bottom area
group { name: "elm/hover/base/submenu/default";
   inherit: "elm/hover/base/main_menu_submenu/default";
   parts {
      part { name: "elm.swallow.offset";
         repeat_events: 1;
         description { state: "default" 0.0;
            //rel1.offset: 2 0;
         }
      }
      //here we don't catch events like the hover does
      part { name: "base";
         type: RECT;
         repeat_events: 1;
         description { state: "visible" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
      }
   }
}

