group { name: "elm/button/base/combobox_vertical/default";
   min: 76 24;
   max: 9999 24;
   images {
      image: "Tizen general/drop_arrow_down_nor.png" COMP;
      image: "Tizen general/drop_arrow_down_sel.png" COMP;
      image: "Property/color_class_img.png" COMP;
   }
   parts {
      part { name: "dummy";
         type: SPACER;
         description { state: "default" 0.0;
         }
         description { state: "focus" 0.0;
         }
       }
       part { name: "base";
         type: SPACER;
         description { state: "default" 0.0;
            min: 0 24;
            max: -1 24;
         }
      }
      part { name: "border";
         type: RECT;
         description { state: "default" 0.0;
            color_class: "combobox_border";
         }
         description { state: "focus" 0.0;
            inherit: "default" 0.00;
            color_class: "combobox_border_over";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "bg";
         type: RECT;
         description { state: "default" 0.0;
            rel1.offset: 1 1;
            rel1.to: "border";
            rel2.offset: -2 -2;
            rel2.to: "border";
            color_class: "combobox";
         }
         description { state: "focus";
            inherit: "default";
            color_class: "combobox_over";
         }
         description { state: "disabled";
            inherit: "default";
            color_class: "combobox";
         }
      }
      rect { "icon_clip";
         desc { "default";
         }
         desc { "disabled";
            inherit: "default";
            color: 255 255 255 180;
         }
      }
      part { name: "left.offset";
         type: SPACER;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            min: 10 0;
            max: 10 -1;
         }
      }
      part { name: "right.offset";
         type: SPACER;
         description { state: "default" 0.0;
            align: 1.0 1.0;
            min: 20 19;
            max: 20 -1;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         clip_to: "icon_clip";
         description { state: "default" 0.0;
            align: 0.0 0.5;
            rel1.offset: 5 0;
            rel2 {
               relative: 0.0 1.0;
               to_x: "right.offset";
               to_y: "base";
            }
         }
      }
      part { name: "select_line";
         type: IMAGE;
         clip_to: "disabler";
         description { state: "default" 0.0;
            max: 9 5;
            image.normal: "Tizen general/drop_arrow_down_nor.png";
            rel1.to: "right.offset";
            rel2.to: "right.offset";
         }
         description { state: "focus" 0.0;
            inherit: "default" 0.00;
            max: 9 5;
            image.normal: "Tizen general/drop_arrow_down_sel.png";
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
         }
         description { state: "active" 0.0;
            inherit: "default" 0.00;
            color: 64 64 64 225;
         }
      }
      rect { "event";
         desc { "default";
            color: 0 0 0 0;
         }
         desc { "disabled";
            inherit: "default";
            visible: 0;
         }
      }
   }
   programs {
      program {
         signal: "mouse,down,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,press" "elm";
      }
      program { name: "button_unclick";
         signal: "mouse,up,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,unpress" "elm";
      }
      program {
         signal: "mouse,clicked,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,click" "elm";
      }

      program { name: "mouse_in";
         source: "event";
         signal: "mouse,in";
         filter: "dummy" "default";
         action: STATE_SET "focus" 0.0;
         target: "border";
         target: "bg";
      }
      program { name: "mouse_out";
         source: "event";
         signal: "mouse,out";
         filter: "dummy" "default";
         action: STATE_SET "default" 0.0;
         target: "border";
         target: "bg";
      }
      program { name: "unfocus";
         source: "elm";
         signal: "elm,action,unfocus";
         filter: "dummy" "default";
         action: STATE_SET "default" 0.0;
         target: "border";
         target: "bg";
      }
      program { name: "focus";
         source: "elm";
         signal: "elm,action,focus";
         filter: "dummy" "default";
         action: STATE_SET "focus" 0.0;
         target: "border";
         target: "bg";
      }
      program { name: "expanded";
         source: "elm";
         signal: "expanded";
         action: STATE_SET "focus" 0.0;
         target: "border";
         target: "dummy";
         target: "select_line";
         target: "bg";
      }
      program { name: "dismiss";
         source: "elm";
         signal: "dismissed";
         action: STATE_SET "default" 0.0;
         target: "border";
         target: "dummy";
         target: "select_line";
         target: "bg";
      }
      program { name: "button_state_disabled";
         signal: "elm,state,disabled"; source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "icon_clip";
         target: "event";
      }
      program { name: "button_state_enabled";
         signal: "elm,state,enabled"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "icon_clip";
         target: "event";
         target: "disabler";
      }
   }
}

group { name: "elm/button/base/combobox_vertical/library";
   min: 76 24;
   max: 9999 24;
   images {
      image: "WYSIWG/tool_s_ic_arrow_nor.png" COMP;
      image: "WYSIWG/tool_s_ic_arrow_sel.png" COMP;
      image: "WYSIWG/tool_s_ic_arrow_mv.png" COMP;
      image: "WYSIWG/tool_s_library_dim.png" COMP;
      image: "WYSIWG/tool_s_library_mv.png" COMP;
      image: "WYSIWG/tool_s_library_nor.png" COMP;
      image: "WYSIWG/tool_s_library_sel.png" COMP;
   }
   parts {
      part { name: "base";
         type: SPACER;
         description { state: "default" 0.0;
            max: -1 24;
         }
      }
      part { name: "border";
         type: RECT;
         description { state: "default" 0.0;
            visible: 0;
            color: 174 174 174 255;
         }
         description { state: "focus" 0.0;
            inherit: "default" 0.00;
            visible: 1;
            color: 5 140 238 255;
         }
      }
      part { name: "left.offset";
         type: SPACER;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            min: 10 0;
            max: 10 -1;
         }
      }
      part { name: "bg";
         type: RECT;
         description { state: "default" 0.0;
         }
      }
      part { name: "icon";
         type: IMAGE;
         description { state: "default" 0.0;
            align: 0.0 0.5;
            min: 20 20;
            max: 20 20;
            image.normal: "WYSIWG/tool_s_library_nor.png";
         }
         description { state: "hovered" 0.0;
            inherit: "default" 0.00;
            image.normal: "WYSIWG/tool_s_library_mv.png";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.00;
            image.normal: "WYSIWG/tool_s_library_dim.png";
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.00;
            image.normal: "WYSIWG/tool_s_library_sel.png";
         }
         description { state: "expanded" 0.0;
            inherit: "default" 0.00;
            image.normal: "WYSIWG/tool_s_library_sel.png";
         }
      }
      part { name: "right.offset";
         type: SPACER;
         description { state: "default" 0.0;
            align: 1.0 1.0;
            min: 20 19;
            max: 20 -1;
         }
      }
      part { name: "select_line";
         type: IMAGE;
         clip_to: "disabler";
         description { state: "default" 0.0;
            min: 9 9;
            max: 9 9;
            image.normal: "WYSIWG/tool_s_ic_arrow_nor.png";
            fill.smooth: 0;
            rel1.to: "right.offset";
            rel2.to: "right.offset";
         }
         description { state: "expanded" 0.0;
            inherit: "default" 0.00;
            image.normal: "WYSIWG/tool_s_ic_arrow_sel.png";
         }
         description { state: "clicked" 0.0;
            inherit: "expanded" 0.0;
         }
         description { state: "hovered" 0.0;
            inherit: "default" 0.00;
            image.normal: "WYSIWG/tool_s_ic_arrow_mv.png";
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         clip_to: "disabler";
         description { state: "default" 0.0;
            align: 0.0 0.5;
            color: 88 88 88 255;
            min: 50 19;
            rel1 {
               relative: 1.0 0.0;
               offset: 8 0;
               to_x: "icon";
            }
            rel2 {
               relative: 0.0 1.0;
               to_x: "right.offset";
            }
         }
      }
      part { name: "expand.btn";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "unvisible" 0.0;
            inherit: "default" 0.00;
            visible: 0;
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
         }
         description { state: "active" 0.0;
            inherit: "default" 0.00;
            color: 64 64 64 225;
         }
      }
      rect { "event";
         desc { "default";
            color: 0 0 0 0;
         }
         desc { "disabled";
            inherit: "default";
            visible: 0;
         }
      }
   }
   programs {
      program {
         signal: "mouse,down,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,press" "elm";
         after: "button_click_anim";
      }
      program { name: "button_click_anim";
         action: STATE_SET "clicked" 0.0;
         target: "base";
         target: "select_line";
      }
      program { name: "button_unclick";
         signal: "mouse,up,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,unpress" "elm";
         after: "button_unclick_anim";
      }
      program { name: "button_unclick_anim";
         action: STATE_SET "default" 0.0;
         target: "base";
         target: "select_line";
      }
      program { name: "buttonactivate";
         signal: "elm,anim,activate"; source: "elm";
         action: STATE_SET "clicked" 0.0;
         target: "base";
         target: "select_line";
         after: "button_unpressed_anim";
      }
      program { name: "button_unpressed_anim";
         action: STATE_SET "default" 0.0;
         in: 0.5 0.0;
         target: "base";
         target: "select_line";
      }
      program {
         signal: "mouse,clicked,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,click" "elm";
      }
      program { name: "button_state_disabled";
         signal: "elm,state,disabled"; source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "event";
         target: "disabler";
      }
      program { name: "button_state_enabled";
         signal: "elm,state,enabled"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "event";
         target: "disabler";
      }
   }
}

group { name: "elm/button/base/combobox_vertical/color_class";
   min: 76 24;
   max: 9999 24;
   images {
      image: "Tizen general/drop_arrow_down_nor.png" COMP;
      image: "Tizen general/drop_arrow_down_sel.png" COMP;
   }
   parts {
      part { name: "base";
         type: SPACER;
         description { state: "default" 0.0;
            max: -1 24;
         }
      }
      part { name: "border";
         type: RECT;
         description { state: "default" 0.0;
            color: 174 174 174 255;
         }
         description { state: "focus" 0.0;
            inherit: "default" 0.00;
            color: 5 140 238 255;
         }
      }
      part { name: "bg";
         type: RECT;
         description { state: "default" 0.0;
            rel1.offset: 1 1;
            rel2.offset: -2 -2;
         }
      }
      rect { "icon_clip";
         desc { "default";
         }
         desc { "disabled";
            inherit: "default";
            color: 255 255 255 180;
         }
      }
      rect { "event";
         desc { "default";
            color: 0 0 0 0;
         }
         desc { "disabled";
            inherit: "default";
            visible: 0;
         }
      }
      part { name: "left.offset";
         type: SPACER;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            min: 10 0;
            max: 10 -1;
         }
      }
      part { name: "right.offset";
         type: SPACER;
         description { state: "default" 0.0;
            align: 1.0 1.0;
            min: 20 19;
            max: 20 -1;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         clip_to: "icon_clip";
         description { state: "default" 0.0;
            align: 0.0 0.5;
            rel1.offset: 5 0;
            rel2 {
               relative: 0.0 1.0;
               to_x: "right.offset";
               to_y: "base";
            }
         }
      }
      part { name: "select_line";
         type: IMAGE;
         clip_to: "disabler";
         description { state: "default" 0.0;
            max: 9 5;
            image.normal: "Tizen general/drop_arrow_down_nor.png";
            rel1.to: "right.offset";
            rel2.to: "right.offset";
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.00;
            max: 8 4;
            image.normal: "Tizen general/drop_arrow_down_sel.png";
         }
      }
      part { name: "bg.color.color1";
         type: RECT;
         description { state: "default" 0.0;
            color: 142 142 142 255;
            rel1.to: "bg.color1";
            rel2.to: "bg.color1";
         }
      }
      part { name: "bg.color.color2";
         type: RECT;
         description { state: "default" 0.0;
            color: 142 142 142 255;
            rel1.to: "bg.color2";
            rel2.to: "bg.color2";
         }
      }
      part { name: "bg.color.color3";
         type: RECT;
         description { state: "default" 0.0;
            color: 142 142 142 255;
            rel1.to: "bg.color3";
            rel2.to: "bg.color3";
         }
      }
      part { name: "bg.color3";
         type: IMAGE;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            min: 11 11;
            max: 11 11;
            image.normal: "Property/color_class_img.png";
            fill.smooth: 0;
            rel1.to: "base";
            rel2 {
               relative: 0.0 1.0;
               offset: -7 -1;
               to_x: "select_line";
               to_y: "base";
            }
         }
      }
      part { name: "bg.color2";
         type: IMAGE;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            min: 11 11;
            max: 11 11;
            image.normal: "Property/color_class_img.png";
            fill.smooth: 0;
            rel1.to: "base";
            rel2 {
               relative: 0.0 1.0;
               offset: -6 -1;
               to_x: "bg.color3";
               to_y: "base";
            }
         }
      }
      part { name: "bg.color1";
         type: IMAGE;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            min: 11 11;
            max: 11 11;
            image.normal: "Property/color_class_img.png";
            fill.smooth: 0;
            rel1.to: "base";
            rel2 {
               relative: 0.0 1.0;
               offset: -6 -1;
               to_x: "bg.color2";
               to_y: "base";
            }
         }
      }
      part { name: "swallow.color1";
         type: SWALLOW;
         description { state: "default" 0.0;
            rel1.to: "bg.color1";
            rel1.offset: 1 1;
            rel2.offset: -2 -2;
            rel2.to: "bg.color1";
         }
      }
      part { name: "swallow.color2";
         type: SWALLOW;
         description { state: "default" 0.0;
            rel1.to: "bg.color2";
            rel1.offset: 1 1;
            rel2.offset: -2 -2;
             rel2.to: "bg.color2";
         }
      }
      part { name: "swallow.color3";
         type: SWALLOW;
         description { state: "default" 0.0;
            rel1.offset: 1 1;
            rel2.offset: -2 -2;
            rel1.to: "bg.color3";
            rel2.to: "bg.color3";
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
         }
         description { state: "active" 0.0;
            inherit: "default" 0.00;
            color: 64 64 64 225;
         }
      }
   }
   programs {
      program {
         signal: "mouse,down,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,press" "elm";
         after: "button_click_anim";
      }
      program { name: "button_click_anim";
         action: STATE_SET "clicked" 0.0;
         target: "base";
         target: "select_line";
      }
      program { name: "button_unclick";
         signal: "mouse,up,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,unpress" "elm";
         after: "button_unclick_anim";
      }
      program { name: "button_unclick_anim";
         action: STATE_SET "default" 0.0;
         target: "base";
         target: "select_line";
      }
      program { name: "buttonactivate";
         signal: "elm,anim,activate"; source: "elm";
         action: STATE_SET "clicked" 0.0;
         target: "base";
         target: "select_line";
         after: "button_unpressed_anim";
      }
      program { name: "button_unpressed_anim";
         action: STATE_SET "default" 0.0;
         in: 0.5 0.0;
         target: "base";
         target: "select_line";
      }
      program {
         signal: "mouse,clicked,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,click" "elm";
      }
      program { name: "button_state_disabled";
         signal: "elm,state,disabled"; source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "icon_clip";
         target: "event";
         target: "disabler";
      }
      program { name: "button_state_enabled";
         signal: "elm,state,enabled"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "icon_clip";
         target: "event";
         target: "disabler";
      }
   }
}

/* TODO: remove scripts, remake hover */
group { name: "elm/hover/base/combobox_vertical/default";
   alias: "elm/hover/base/combobox_vertical/color_class";
   alias: "elm/hover/base/combobox_vertical/library";
   alias: "elm/hover/base/hoversel_vertical/history";
   data.item: "dismiss" "on";
   // max_size limits the maximum size of expanded hoversel
   // when it's scrollable.
   //data.item: "max_size" "60";
   images.image: "Custom/border_1.png" COMP;
   script {
      public visible = 0;
      public right = 0;
      public on_dismiss = 0;
      public topshow2() {
         if (get_int(right) == 0)
            run_program(PROGRAM:"topshow_default");
         else
            run_program(PROGRAM:"topshow_right");
         set_int(visible, 1);
         set_int(on_dismiss, 0);
      }
      public bottomshow2() {
         if (get_int(right) == 0)
            run_program(PROGRAM:"bottomshow_default");
         else
            run_program(PROGRAM:"bottomshow_right");
         set_int(visible, 1);
         set_int(on_dismiss, 0);
      }
   }
   parts {
      part { name: "elm.swallow.offset"; type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            fixed: 1 1;
            rel1.relative: 0.0 0.0;
            rel2.relative: 0.0 0.0;
         }
      }
      part { name: "elm.swallow.size"; type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            fixed: 1 1;
            rel1.to: "elm.swallow.offset";
            rel1.relative: 1.0 1.0;
            rel2.to: "elm.swallow.offset";
            rel2.relative: 1.0 1.0;
         }
      }
      part { name: "button_image";
         mouse_events: 1;
         type: RECT;
         description { state: "default" 0.0;
            rel1.to_x: "limit0";
            rel1.to_y: "elm.swallow.slot.top";
            rel2.to_x: "limit1";
            rel2.to_y: "elm.swallow.slot.middle";
            rel2.offset: -1 -3;
            rel2.relative: 1.0 0.0;
         }
         description { state: "bottom" 0.0;
            rel1.to_x: "limit0";
            rel1.to_y: "elm.swallow.slot.middle";
            rel1.offset: 0 2;
            rel1.relative: 0.0 1.0;
            rel2.to_x: "limit1";
            rel2.to_y: "elm.swallow.slot.bottom";
         }
      }
      part { name: "limit0"; type: SPACER;
         description { state: "default" 0.0;
            rel1.to_x: "elm.swallow.slot.top";
            rel1.offset: 0 0;
            rel2.to_x: "elm.swallow.slot.middle";
            rel2.offset: 0 0;
            rel2.relative: 0.0 1.0;
            align: 0.0 0.5;
            min: 1 1;
            max: 1 99999;
         }
         description { state: "bottom" 0.0;
            inherit: "default" 0.0;
            rel1.to_x: "elm.swallow.slot.bottom";
         }
      }
      part { name: "limit1"; type: SPACER;
         description { state: "default" 0.0;
            rel1.to_x: "elm.swallow.slot.middle";
            rel1.offset: -1 2;
            rel1.relative: 1.0 0.0;
            rel2.to_x: "elm.swallow.slot.top";
            rel2.offset: -2 0;
            align: 1.0 0.5;
            min: 1 1;
            max: 1 99999;
         }
         description { state: "bottom" 0.0;
            inherit: "default" 0.0;
            rel2.to_x: "elm.swallow.slot.bottom";
         }
      }
      part { name: "base"; type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "topclip"; type: RECT;
         description { state: "default" 0.0;
            rel2.to_y: "button_image";
         }
      }
      part { name: "elm.swallow.slot.top"; type: SWALLOW;
         clip_to: "topclip";
         description { state: "default" 0.0;
            visible: 1;
            align: 0.0 0.0;
            fixed: 0 1;
            rel1.to: "elm.swallow.slot.middle";
            rel1.relative: 0.0 0.0;
            rel1.offset: 1 -1;
            rel2.to: "elm.swallow.slot.middle";
            rel2.relative: 1.0 0.0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            align: 0.0 1.0;
         }
         description { state: "right" 0.0;
            inherit: "default" 0.0;
            align: 1.0 0.0;
         }
         description { state: "right_visible" 0.0;
            inherit: "default" 0.0;
            align: 1.0 1.0;
         }
      }
      part { name: "bottomclip"; type: RECT;
         description { state: "default" 0.0;
            rel1.to_y: "button_image";
            rel1.offset: 0 0;
         }
      }
      part { name: "elm.swallow.slot.bottom"; type: SWALLOW;
         clip_to: "bottomclip";
         description { state: "default" 0.0;
            align: 0.0 1.0;
            fixed: 0 1;
            rel1.to: "elm.swallow.slot.middle";
            rel1.relative: 0.0 1.0;
            rel1.offset: 1 0;
            rel2.to: "elm.swallow.slot.middle";
            rel2.relative: 1.0 1.0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            align: 0.0 0.0;
         }
         description { state: "right" 0.0;
            inherit: "default" 0.0;
            align: 1.0 1.0;
         }
         description { state: "right_visible" 0.0;
            inherit: "default" 0.0;
            align: 1.0 0.0;
         }
      }
      part { name: "elm.swallow.slot.middle";
         type: SWALLOW;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.size";
            rel2.to: "elm.swallow.size";
         }
      }
      part { name: "outline";
         type: IMAGE;
         repeat_events: 1;
         description { state: "default" 0.0;
            color_class: "text_tabs_selected";
            image {
               normal: "Custom/border_1.png";
               border: 1 1 1 1;
               middle: NONE;
            }
            rel1.to: "button_image";
            rel1.relative: 0.0 0.0;
            rel1.offset: -1 -1;
            rel2.to: "button_image";
            rel2.relative: 1.0 1.0;
            rel2.offset: 0 0;
        }
      }

   }
   programs {
      program { name: "end";
         signal: "mouse,up,*"; source: "base";
         script {
            if (get_int(on_dismiss) == 0) {
               emit("elm,action,dismiss", "elm");
               set_int(on_dismiss, 1);
            }
         }
      }
      program { name: "show";
         signal: "elm,action,show"; source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "base";
      }
      program { name: "hide";
         signal: "elm,action,hide"; source: "elm";
         after: "hidefinished";
      }
      program { name: "hidefinished";
         script {
            set_int(on_dismiss, 0);
            emit("elm,action,hide,finished", "elm");
         }
      }
      program { name: "topshow_emit_internal";
         signal: "elm,action,slot,top,show"; source: "elm";
         action: SIGNAL_EMIT "expanded" "elm";
         target: "elm.swallow.slot.middle";
      }
      program { name: "topshow";
         signal: "elm,action,slot,top,show"; source: "elm";
         script {
            set_state(PART:"limit0", "default", 0.0);
            set_state(PART:"limit1", "default", 0.0);
            set_state(PART:"button_image", "default", 0.0);
            topshow2();
         }
      }
      program { name: "topshow_default";
         action: STATE_SET "visible" 0.0;
         target: "elm.swallow.slot.top";
         transition: DECELERATE 0.5;
      }
      program { name: "topshow_right";
         action: STATE_SET "right_visible" 0.0;
         target: "elm.swallow.slot.top";
         transition: DECELERATE 0.5;
      }
      program { name: "tophide";
         signal: "elm,action,slot,top,hide";
         source: "elm";
         script {
            if (get_int(right) == 0)
               run_program(PROGRAM:"tophide_default");
            else
               run_program(PROGRAM:"tophide_right");
            set_int(visible, 0);
         }
      }
      program { name: "tophide_default";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.slot.top";
         transition: DECELERATE 0.5;
      }
      program { name: "tophide_right";
         action: STATE_SET "right" 0.0;
         target: "elm.swallow.slot.top";
         transition: DECELERATE 0.5;
      }
      program { name: "bottomshow";
         signal: "elm,action,slot,bottom,show"; source: "elm";
         script {
            set_state(PART:"limit0", "bottom", 0.0);
            set_state(PART:"limit1", "bottom", 0.0);
            set_state(PART:"button_image", "bottom", 0.0);
            bottomshow2();
         }
      }
      program { name: "bottomshow_default";
         action: STATE_SET "visible" 0.0;
         target: "elm.swallow.slot.bottom";
         transition: DECELERATE 0.5;
      }
      program { name: "bottomshow_right";
         action: STATE_SET "right_visible" 0.0;
         target: "elm.swallow.slot.bottom";
         transition: DECELERATE 0.5;
      }
      program { name: "bottomhide";
         signal: "elm,action,slot,bottom,hide"; source: "elm";
         script {
            if (get_int(right) == 0) {
               run_program(PROGRAM:"bottomhide_default");
            }
            else {
               run_program(PROGRAM:"bottomhide_right");
            }
            set_int(visible, 0);
         }
      }
      program { name: "bottomhide_default";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.slot.bottom";
         transition: DECELERATE 0.5;
      }
      program { name: "bottomhide_right";
         action: STATE_SET "right" 0.0;
         target: "elm.swallow.slot.bottom";
         transition: DECELERATE 0.5;
      }
      program { name: "align_right";
         signal: "elm,state,align,right"; source: "elm";
         script {
            set_int(right, 1);
            if (get_int(visible) == 0) {
               set_state(PART:"elm.swallow.slot.top", "right", 0.0);
               set_state(PART:"elm.swallow.slot.bottom", "right", 0.0);
            }
            else {
               set_state(PART:"elm.swallow.slot.top", "right_visible", 0.0);
               set_state(PART:"elm.swallow.slot.bottom", "right_visible", 0.0);
            }
         }
      }
      program { name: "align_default";
         signal: "elm,state,align,default"; source: "elm";
         script {
            set_int(right, 0);
            if (get_int(visible) == 0) {
               set_state(PART:"elm.swallow.slot.top", "default", 0.0);
               set_state(PART:"elm.swallow.slot.bottom", "default", 0.0);
            }
            else {
               set_state(PART:"elm.swallow.slot.top", "visible", 0.0);
               set_state(PART:"elm.swallow.slot.bottom", "visible", 0.0);
            }
         }
      }
   }
}

group { name: "elm/genlist/base/combobox_vertical/default";
   inherit: "elm/scroller/base/default";
   alias: "elm/genlist/base/combobox_vertical/library";
   alias: "elm/scroller/base/popup/no_inset_shadow"; /* that's for hoversel */
   data.item: "focus_highlight" "on";
   parts {
      part { name: "bg";
         description { state: "default" 0.0;
            color_class: "combobox_list_bg";
         }
      }
   }

}

group { name: "elm/genlist/item_compress/default/combobox_vertical/color_class";
   images.image: "Property/color_class_img.png" COMP;
   data {
      item: "texts" "elm.text";
      item: "contents" "swallow.color1 swallow.color2 swallow.color3";
   }
   parts {
      part { name: "bg";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            min: 0 24;
            max: -1 0;
         }
         description { state: "selected" 0.0;
            color: 203 233 255 255;
            min: 0 19;
            max: -1 0;
         }
      }
      part { name: "elm.text";
         type: TEXT;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 85 85 85 255;
            rel1 {
               offset: 10 0;
            }
            rel2 {
               offset: -11 -1;
            }
            text {
               font: FN;
               size: 15;
               align: 0.0 0.5;
               min: 1 1;
               ellipsis: -1;
            }
         }
         description { state: "hide" 0.0;
            inherit: "default";
            visible: 0;
         }
      }
      part { name: "bg.color.color1";
         type: RECT;
         description { state: "default" 0.0;
            color: 142 142 142 255;
            rel1.to: "bg.color1";
            rel2.to: "bg.color1";
         }
      }
      part { name: "bg.color.color2";
         type: RECT;
         description { state: "default" 0.0;
            color: 142 142 142 255;
            rel1.to: "bg.color2";
            rel2.to: "bg.color2";
         }
      }
      part { name: "bg.color.color3";
         type: RECT;
         description { state: "default" 0.0;
            color: 142 142 142 255;
            rel1.to: "bg.color3";
            rel2.to: "bg.color3";
         }
      }
      part { name: "bg.color3";
         type: IMAGE;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            min: 11 11;
            max: 11 11;
            image.normal: "Property/color_class_img.png";
            fill.smooth: 0;
            rel2 {
               offset: -7 -1;
            }
         }
      }
      part { name: "bg.color2";
         type: IMAGE;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            min: 11 11;
            max: 11 11;
            image.normal: "Property/color_class_img.png";
            fill.smooth: 0;
            rel2 {
               relative: 0.0 1.0;
               offset: -6 -1;
               to_x: "bg.color3";
            }
         }
      }
      part { name: "bg.color1";
         type: IMAGE;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            min: 11 11;
            max: 11 11;
            image.normal: "Property/color_class_img.png";
            fill.smooth: 0;
            rel2 {
               relative: 0.0 1.0;
               offset: -6 -1;
               to_x: "bg.color2";
            }
         }
      }
      part { name: "swallow.color1";
         type: SWALLOW;
         description { state: "default" 0.0;
            rel1.to: "bg.color1";
            rel1.offset: 1 1;
            rel2.offset: -2 -2;
            rel2.to: "bg.color1";
         }
      }
      part { name: "swallow.color2";
         type: SWALLOW;
         description { state: "default" 0.0;
            rel1.to: "bg.color2";
            rel1.offset: 1 1;
            rel2.offset: -2 -2;
             rel2.to: "bg.color2";
         }
      }
      part { name: "swallow.color3";
         type: SWALLOW;
         description { state: "default" 0.0;
            rel1.offset: 1 1;
            rel2.offset: -2 -2;
            rel1.to: "bg.color3";
            rel2.to: "bg.color3";
         }
      }
      part { name: "disclip";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 255 255 255 0;
         }
      }
   }
   programs {
      program { name: "selected";
         signal: "mouse,in";
         source: "disclip";
         action: STATE_SET "selected" 0.00;
         target: "bg";
      }
      program { name: "unselected";
         signal: "mouse,out";
         source: "disclip";
         action: STATE_SET "default" 0.00;
         target: "bg";
      }
      program { name: "item_hide";
         signal: "elm,state,contract_flip";
         source: "elm";
         action: STATE_SET "hide" 0.00;
         target: "elm.text";
         target: "disclip";
      }
   }
}

group { name: "elm/genlist/item_compress/default/combobox_vertical/default";
   alias: "elm/genlist/item_compress/default/combobox_vertical/library";
   data {
      item: "texts" "elm.text";
      item: "contents" "elm.swallow.icon elm.swallow.end";
   }
   parts {
      part { name: "bg";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            min: 0 24;
            max: -1 0;
         }
         description { state: "selected" 0.0;
            color: 203 233 255 255;
            min: 0 19;
            max: -1 0;
         }
      }
      part { name: "elm.text";
         type: TEXT;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 85 85 85 255;
            rel1 {
               offset: 10 0;
            }
            rel2 {
               offset: -11 -1;
            }
            text {
               font: FN;
               size: 15;
               align: 0.0 0.5;
               min: 1 1;
               ellipsis: -1;
            }
         }
         description { state: "hide" 0.0;
            inherit: "default";
            visible: 0;
         }
      }
      part { name: "disclip";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 255 255 255 0;
         }
      }
   }
   programs {
      program { name: "selected";
         signal: "mouse,in";
         source: "disclip";
         action: STATE_SET "selected" 0.00;
         target: "bg";
      }
      program { name: "unselected";
         signal: "mouse,out";
         source: "disclip";
         action: STATE_SET "default" 0.00;
         target: "bg";
      }
      program { name: "item_hide";
         signal: "elm,state,contract_flip";
         source: "elm";
         action: STATE_SET "hide" 0.00;
         target: "elm.text";
         target: "disclip";
      }
   }
}

group { name: "elm/scroller/entry_single/combobox_vertical/default";
   alias: "elm/scroller/entry_single/combobox_horizontal/default";
   alias: "elm/scroller/entry_single/combobox_vertical/color_class";
   alias: "elm/scroller/entry_single/combobox_vertical/library";
   parts {
      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
            rel1.offset: 1 0;
            rel2.offset: -5 -1;
         }
      }
   }
}


group { name: "elm/entry/base-single/combobox_vertical/default";
   alias: "elm/entry/base-single/combobox_vertical/color_class";
   alias: "elm/entry/base-single/combobox_vertical/library";
   parts {
      part { name: "elm.text";
         type: TEXTBLOCK;
         clip_to: "disabler";
         mouse_events: 1;
         repeat_events: 1;
         scale: 1;
         cursor_mode: BEFORE;
         multiline: 0;
         description { state: "default" 0.0;
            text {
               style: "entry_main_combobox_text";
               min: 1 1;
               ellipsis: -1;
            }
         }
         description { state: "focus" 0.0;
            inherit: "default" 0.0;
            text.style: "entry_main_combobox_text";
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
         }
         description { state: "active" 0.0;
            color: 64 64 64 225;
         }
      }
   }
   programs {
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "active" 0.0;
         target: "disabler";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "disabler";
      }
      program { name: "expand";
         signal: "expanded";
         source: "elm";
         action: STATE_SET "focus" 0.0;
         target: "elm.text";
      }
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
   }
}
